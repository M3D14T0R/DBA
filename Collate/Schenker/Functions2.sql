USE [SCHENKER]
GO

/****** Object:  UserDefinedFunction [dbo].[FN_CONVERTER_SEG_HORAS]    Script Date: 21/07/2015 16:26:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_CONVERTER_SEG_HORAS]	(@MINUTOS INT)
RETURNS varchar(10)

AS
/* SELECT tempo_operacao,DBO.FN_CONVERTER_SEG_HORAS(tempo_operacao) AS horas_tempo_operacao  FROM   RESUMO_CICLO */
BEGIN
        DECLARE @HORAS VARCHAR(10)
        SET @HORAS =    LTRIM(RTRIM(CONVERT(VARCHAR,(@MINUTOS / 60)/ 60 )))
        IF LTRIM(RTRIM(CONVERT(VARCHAR,CAST((@MINUTOS/60) % 60 AS NUMERIC(2))))) = 0 AND LTRIM(RTRIM(CONVERT(VARCHAR,CAST((@MINUTOS/60) % 60 AS NUMERIC(2))))) IS NOT NULL
           BEGIN
	      SET @HORAS =  @HORAS + ':00'
           END
        IF LTRIM(RTRIM(CONVERT(VARCHAR,CAST((@MINUTOS/60) % 60 AS NUMERIC(2))))) <> 0 AND LTRIM(RTRIM(CONVERT(VARCHAR,CAST((@MINUTOS/60) % 60 AS NUMERIC(2))))) IS NOT NULL
           BEGIN
              IF ((@MINUTOS/60) % 60) <10
	              BEGIN
	                 SET @HORAS =  @HORAS + ':0' + LTRIM(RTRIM(CONVERT(VARCHAR,CAST((@MINUTOS/60) % 60 AS NUMERIC(2)))))
	              END
              ELSE
	              BEGIN
	                 SET @HORAS =  @HORAS + ':' + LTRIM(RTRIM(CONVERT(VARCHAR,CAST((@MINUTOS/60) % 60 AS NUMERIC(2)))))
	              END
           END

	RETURN @HORAS


END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_TABLE_EMAIL_PREFAT02]    Script Date: 21/07/2015 16:26:52 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/*
drop function FN_040_TABLE_EMAIL_PREFAT02
select dbo.FN_040_TABLE_EMAIL_PREFAT02(38919) 
*/

create function [dbo].[FN_040_TABLE_EMAIL_PREFAT02] (@IN_DOCTO_PAGTO_ID INT)
returns VARCHAR(MAX)
BEGIN 

 DECLARE @VAR_TABLE VARCHAR(MAX),
		 @VAR_TOTAL NUMERIC(15,2)

 SELECT @VAR_TABLE = '<TABLE>'

 SELECT @VAR_TABLE = @VAR_TABLE + '<TR>'
								+ '<TD ALIGN=''CENTER''><B>NÂº CTRC</B></TD>'
								+ '<TD ALIGN=''CENTER''><B>Shipment</B></TD>'
								+ '<TD ALIGN=''CENTER''><B>Valor</B></TD>'
								+ '</TR>'

 SELECT @VAR_TABLE = @VAR_TABLE + '<TR>' 
								+ '<TD ALIGN=''CENTER''>' + CONVERT(VARCHAR,ISNULL(DCT_CTRC.ID_SISTEMA_EXTERNO,'')) + '</TD>'
								+ '<TD ALIGN=''CENTER''>' + CONVERT(VARCHAR,ISNULL(DCT_SHIP.NUM_DOCTO_TRANSPORTE,'')) + '</TD>'
								+ '<TD ALIGN=''CENTER''>' + DBO.FN_CGS_EDITA_VALOR_CAMPO_TEXTO_N(ISNULL(DCT_SHIP.VAL_TOTAL,0),'0,00',2) + '</TD>' 
								+ '</TR>' 
   FROM DOCTO_TRANSP_PAGTO DCT_FAT
		INNER JOIN DOCTO_TRANSPORTE DCT_CTRC ON DCT_FAT.DOCTO_TRANSPORTE_ID = DCT_CTRC.DOCTO_TRANSPORTE_ID										    
										   AND DCT_CTRC.TAB_TIPO_DOCTO_TRANSP_ID IN (1,4)
										   AND DCT_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_CTRC ON DCT_CTRC.DOCTO_TRANSPORTE_ID = NF_CTRC.DOCTO_TRANSPORTE_ID
									 AND NF_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_SHIP ON NF_CTRC.NOTA_FISCAL_ID = NF_SHIP.NOTA_FISCAL_PAI_ID
									 AND NF_SHIP.TAB_STATUS_ID = 1
		INNER JOIN DOCTO_TRANSPORTE DCT_SHIP ON NF_SHIP.DOCTO_TRANSPORTE_ID = DCT_SHIP.DOCTO_TRANSPORTE_ID
										   AND DCT_SHIP.TAB_TIPO_DOCTO_TRANSP_ID IN (401)
										   AND DCT_SHIP.TAB_STATUS_ID = 1
  WHERE DCT_FAT.DOCTO_PAGTO_ID = @IN_DOCTO_PAGTO_ID
	AND DCT_FAT.TAB_STATUS_ID = 1

 SELECT @VAR_TOTAL = ISNULL(SUM(DCT_SHIP.VAL_TOTAL),0)
   FROM DOCTO_TRANSP_PAGTO DCT_FAT
		INNER JOIN DOCTO_TRANSPORTE DCT_CTRC ON DCT_FAT.DOCTO_TRANSPORTE_ID = DCT_CTRC.DOCTO_TRANSPORTE_ID										    
										   AND DCT_CTRC.TAB_TIPO_DOCTO_TRANSP_ID IN (1,4)
										   AND DCT_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_CTRC ON DCT_CTRC.DOCTO_TRANSPORTE_ID = NF_CTRC.DOCTO_TRANSPORTE_ID
									 AND NF_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_SHIP ON NF_CTRC.NOTA_FISCAL_ID = NF_SHIP.NOTA_FISCAL_PAI_ID
									 AND NF_SHIP.TAB_STATUS_ID = 1
		INNER JOIN DOCTO_TRANSPORTE DCT_SHIP ON NF_SHIP.DOCTO_TRANSPORTE_ID = DCT_SHIP.DOCTO_TRANSPORTE_ID
										   AND DCT_SHIP.TAB_TIPO_DOCTO_TRANSP_ID IN (401)
										   AND DCT_SHIP.TAB_STATUS_ID = 1
  WHERE DCT_FAT.DOCTO_PAGTO_ID = @IN_DOCTO_PAGTO_ID
	AND DCT_FAT.TAB_STATUS_ID = 1

 SELECT @VAR_TABLE = @VAR_TABLE + '<TR>'
								+ '<TD ALIGN=''RIGHT'' COLSPAN=''2''><B>Total</B></TD>'
								+ '<TD ALIGN=''CENTER''>' + DBO.FN_CGS_EDITA_VALOR_CAMPO_TEXTO_N(ISNULL(@VAR_TOTAL,0),'0,00',2) + '</TD>'
								+ '</TR>'

 SELECT @VAR_TABLE = @VAR_TABLE + '</TABLE>'

 RETURN @VAR_TABLE

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_RETIRAR_CARACTER_INVALIDO_ASCII]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_040_RETIRAR_CARACTER_INVALIDO_ASCII]
(
    @P_V_TEXTO      AS VARCHAR(8000)
)
RETURNS VARCHAR(8000)
AS

BEGIN

    DECLARE
        @I_INDICE                   AS INT
    
    DECLARE
        @V_RETORNO                  AS VARCHAR(8000)
        , @V_CARACTER               AS VARCHAR(01)
    
    DECLARE
        @T_TEXTO_QUEBRADO AS TABLE
        (
            temp_id             INT IDENTITY(1,1)
            , caracter          VARCHAR(01) NULL
            , codigo_ascii      INT NULL
        )
    
/*========================================================================================================================*/

    SET @V_RETORNO = SPACE(0)
    SET @V_CARACTER = SPACE(0)
    
    SET @I_INDICE = 1
    
    IF @P_V_TEXTO IS NOT NULL
        BEGIN
            WHILE(@I_INDICE <= LEN(@P_V_TEXTO))
                BEGIN
                    SET @V_CARACTER = SUBSTRING(@P_V_TEXTO, @I_INDICE, 1)
                    
                    INSERT INTO @T_TEXTO_QUEBRADO
                    VALUES
                    (
                        @V_CARACTER
                        , ASCII(@V_CARACTER)
                    )
                    
                    SET @I_INDICE = @I_INDICE + 1
                END
            
            /*
            RETIRA OS CARACTERES DAS FAIXAS ABAIXO
            
             - 001-032
             - 127-137
             - 139-144
             - 147-160
            */
            
            UPDATE @T_TEXTO_QUEBRADO
                SET
                    caracter = SPACE(1)
                    , codigo_ascii = 32
            WHERE 
            (
                codigo_ascii BETWEEN 1 AND 31
                OR
                codigo_ascii BETWEEN 127 AND 137
                OR
                codigo_ascii BETWEEN 139 AND 144
                OR
                codigo_ascii BETWEEN 147 AND 160
            )
            
            SELECT
                @V_RETORNO = @V_RETORNO + caracter
            FROM @T_TEXTO_QUEBRADO
            ORDER BY 
                temp_id ASC
        END
    ELSE
        SET @V_RETORNO = NULL

    
    RETURN @V_RETORNO
END
GO

/****** Object:  UserDefinedFunction [dbo].[FN_DECODE]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_DECODE](@CondField as varchar(100),@Criteria as varchar(100), 
                       @TrueValue as varchar(100), @FalseValue as varchar(100))
returns varchar(100)
begin
       return case when @CondField = @Criteria then @TrueValue 
                   else @FalseValue end
end

GO

/****** Object:  UserDefinedFunction [dbo].[FN_LPAD]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_LPAD]  /* SELECT DBO.FN_LPAD('123', 5, '0') */
  (@TEXTO_RECEBIDO VARCHAR(200), 
  @TAMANHO_NECESSARIO INT, 
  @CARACTER_COMPLETA VARCHAR(200)) RETURNS VARCHAR(500)
AS
BEGIN
  DECLARE 
    @TAMANHO_RECEBIDO INT,
    @QTDE_COMPLETAR INT,
    @TEXTO_FORMATADO VARCHAR(500)
  
  IF @CARACTER_COMPLETA IS NULL
  BEGIN
    SELECT @CARACTER_COMPLETA = ' ';
  END;
  
  IF @TEXTO_RECEBIDO IS NULL
  BEGIN
    SELECT @TEXTO_FORMATADO = REPLICATE(@CARACTER_COMPLETA, @TAMANHO_NECESSARIO)
    RETURN @TEXTO_FORMATADO;
  END;

  SELECT @TAMANHO_RECEBIDO = LEN(@TEXTO_RECEBIDO);
  SELECT @QTDE_COMPLETAR = @TAMANHO_NECESSARIO - @TAMANHO_RECEBIDO;
  
  IF @QTDE_COMPLETAR >= 0
    BEGIN
      SELECT @TEXTO_FORMATADO = REPLICATE(@CARACTER_COMPLETA, @QTDE_COMPLETAR) + @TEXTO_RECEBIDO
    END 
  ELSE
    BEGIN
      SELECT @TEXTO_FORMATADO = SUBSTRING(@TEXTO_RECEBIDO, 1, @TAMANHO_NECESSARIO)
    END
 
 RETURN @TEXTO_FORMATADO;

END;
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_LPAD_NULL]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_LPAD_NULL]  /* SELECT DBO.FN_LPAD('123', 5, '0') */
  (@TEXTO_RECEBIDO VARCHAR(200), 
  @TAMANHO_NECESSARIO INT, 
  @CARACTER_COMPLETA VARCHAR(200)) RETURNS VARCHAR(500)
AS
BEGIN
  DECLARE 
    @TAMANHO_RECEBIDO INT,
    @QTDE_COMPLETAR INT,
    @TEXTO_FORMATADO VARCHAR(500)
  
  IF @CARACTER_COMPLETA IS NULL
  BEGIN
    SELECT @CARACTER_COMPLETA = ' ';
  END;
  
  IF @TEXTO_RECEBIDO IS NULL
  BEGIN
    RETURN @TEXTO_FORMATADO;
  END;

  SELECT @TAMANHO_RECEBIDO = LEN(@TEXTO_RECEBIDO);
  SELECT @QTDE_COMPLETAR = @TAMANHO_NECESSARIO - @TAMANHO_RECEBIDO;
  
  IF @QTDE_COMPLETAR >= 0
    BEGIN
      SELECT @TEXTO_FORMATADO = REPLICATE(@CARACTER_COMPLETA, @QTDE_COMPLETAR) + @TEXTO_RECEBIDO
    END 
  ELSE
    BEGIN
      SELECT @TEXTO_FORMATADO = SUBSTRING(@TEXTO_RECEBIDO, 1, @TAMANHO_NECESSARIO)
    END
 
 RETURN @TEXTO_FORMATADO;

END;
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_AGREGA_NFS_DCT]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_040_AGREGA_NFS_DCT]
 (
	@DOCTO_TRANSPORTE_ID INT
 )
	RETURNS VARCHAR(5000)  
AS  
BEGIN  
	DECLARE @NFS VARCHAR(5000)


	SET @NFS = ''
  

	SELECT 
		@NFS = @NFS + NOTA_FISCAL +' / '
	FROM 
		NOTA_FISCAL  
	WHERE 
		DOCTO_TRANSPORTE_ID = @DOCTO_TRANSPORTE_ID
	order by NOTA_FISCAL


	IF ISNULL(@NFS,'') <> ''
	 BEGIN
		RETURN SUBSTRING(@NFS,1,LEN(@NFS)-1)
	 END
	
	RETURN(@NFS)
	   
END  
  
 
 
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_recupera_lanc_ID]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fn_recupera_lanc_ID]
(
	@DOCTO_PAGTO_ID int
)
RETURNS Varchar (500)
AS
BEGIN
	declare @retorno varchar(500)
	
	set @retorno = ''

	select @retorno = @retorno + 
		convert(varchar, LCTO_OPER.LANCAMENTO_OPERACAO_ID) + '/'
		
	from  LANCAMENTO_OPERACAO LCTO_OPER 
	where  LCTO_OPER.DOCTO_PAGTO_ID = @DOCTO_PAGTO_ID 
		and LCTO_OPER.tab_status_id = 1	
		
	if isnull(@retorno, '') <> ''
		set @retorno = left(@retorno, len(@retorno) - 1)

	return @retorno	

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_recupera_lanc]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fn_recupera_lanc] 
(
	@DOCTO_PAGTO_ID int
)
RETURNS Varchar (500)
AS
BEGIN
	declare @retorno varchar(500)
	
	set @retorno = ''

	select @retorno = @retorno + 
		case when LCTO_OPER.nosso_numero is null
		then ''
		else LCTO_OPER.nosso_numero + '/'
		end
	from  LANCAMENTO_OPERACAO LCTO_OPER 
	where  LCTO_OPER.DOCTO_PAGTO_ID = @DOCTO_PAGTO_ID 
		and LCTO_OPER.tab_status_id = 1	
		
	if isnull(@retorno, '') <> ''
		set @retorno = left(@retorno, len(@retorno) - 1)

	return @retorno	

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_recupera_DCT_fat]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fn_recupera_DCT_fat] 
(
	@DOCTO_PAGTO_ID int
	
)
RETURNS Varchar (500)
AS
BEGIN
	declare @retorno varchar(500)
	
	set @retorno = ''

	select @retorno = @retorno + 
		CASE
         WHEN DCT.TAB_TIPO_MODAL_TRANSPORTE_ID IS NOT NULL THEN TIPO_MODAL.DESC_MODAL_TRANSPORTE + ' ' + DCT.ID_SISTEMA_EXTERNO + ' ' + Isnull(DCT.NUM_SR, '')
         ELSE DCT.ID_SISTEMA_EXTERNO
       END + '/'
		
	from  Docto_transporte DCT left join
		  TAB_TIPO_MODAL_TRANSPORTE TIPO_MODAL on DCT.TAB_TIPO_MODAL_TRANSPORTE_ID = TIPO_MODAL.TAB_TIPO_MODAL_TRANSPORTE_ID 	 
			
	where  DCT.DOCTO_PAGTO_ID = @DOCTO_PAGTO_ID 
		and DCT.tab_status_id = 1
   	
		
	if isnull(@retorno, '') <> ''
		set @retorno = left(@retorno, len(@retorno) - 1)

	return @retorno	

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_recupera_data_fat_minima]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fn_recupera_data_fat_minima]
(
	@DOCTO_PAGTO_ID int
)
RETURNS Varchar (500)
AS
BEGIN
	declare @retorno varchar(500)
	
	set @retorno = ''

	select @retorno =  
		case when convert(varchar,DCT.data_emissao,103) is null
		then ''
		else  convert (varchar,min(DCT.data_emissao),103) 
		end
	from  Docto_transporte DCT 
	where  DCT.DOCTO_PAGTO_ID = @DOCTO_PAGTO_ID 
		and DCT.tab_status_id = 1	
	group by
		DCT.data_emissao	
	
	--if isnull(@retorno, '') <> ''
	--	set @retorno = left(@retorno, len(@retorno) - 1)

	return @retorno	

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_recupera_data_fat]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fn_recupera_data_fat] 
(
	@DOCTO_PAGTO_ID int
)
RETURNS Varchar (500)
AS
BEGIN
	declare @retorno varchar(500)
	
	set @retorno = ''

	select @retorno = @retorno + 
		case when convert(varchar,DCT.data_emissao,103) is null
		then ''
		else convert (varchar,DCT.data_emissao,103) + '/'
		end
	from  Docto_transporte DCT 
	where  DCT.DOCTO_PAGTO_ID = @DOCTO_PAGTO_ID 
		and DCT.tab_status_id = 1	
		
	if isnull(@retorno, '') <> ''
		set @retorno = left(@retorno, len(@retorno) - 1)

	return @retorno	

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_RET_REG_ORIG_LIGADA_CLI]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_040_RET_REG_ORIG_LIGADA_CLI](
     @DOCTO_TRANSPORTE_ID       INT
	) RETURNS varchar(299)  
as  
BEGIN  


DECLARE @REGIAO_ORIGEM	VARCHAR(80),
		@CLIENTE_ID		INT,
		@ORIGEM_ID		INT,
		@GRUPO_CLIENTE_ID	INT,
		@CEP_ORIGEM		VARCHAR(9)

SELECT 
	@ORIGEM_ID = ORIGEM_ID,
	@CLIENTE_ID = CLIENTE_ID,
	@GRUPO_CLIENTE_ID = GRUPO_CLIENTE.GRUPO_CLIENTE_ID,
	@CEP_ORIGEM = VEND_PES_ORI.CEP
FROM
	DOCTO_TRANSPORTE
	INNER JOIN VENDERECO_PESSOA VEND_PES_ORI ON DOCTO_TRANSPORTE.END_REMETENTE_ID = VEND_PES_ORI.ENDERECO_PESSOA_ID
	LEFT JOIN VCLIENTE ON DOCTO_TRANSPORTE.CLIENTE_ID = VCLIENTE.PESSOA_ID
	LEFT JOIN GRUPO_CLIENTE ON VCLIENTE.GRUPO_CLIENTE_ID = GRUPO_CLIENTE.GRUPO_CLIENTE_ID
WHERE 
	DOCTO_TRANSPORTE_ID = @DOCTO_TRANSPORTE_ID



--BUSCA REGIAO ORIGEM
SELECT 
	@REGIAO_ORIGEM = REGIAO.NOME
FROM
	LIGA_REGIAO
	INNER JOIN LIGA_REGIAO_ITEM ON LIGA_REGIAO.LIGA_REGIAO_ID = LIGA_REGIAO_ITEM.LIGA_REGIAO_ID
	INNER JOIN REGIAO ON LIGA_REGIAO_ITEM.REGIAO_ID = REGIAO.REGIAO_ID
	INNER JOIN REGIAO_MUNIC ON REGIAO.REGIAO_ID = REGIAO_MUNIC.REGIAO_ID
	INNER JOIN MUNICIPIO ON REGIAO_MUNIC.MUNICIPIO_ID = MUNICIPIO.MUNICIPIO_ID
WHERE
	(	LIGA_REGIAO.CLIENTE_ID = @CLIENTE_ID 
			OR 
		LIGA_REGIAO.CLIENTE_ID IN (SELECT PESSOA_ID FROM VCLIENTE WHERE GRUPO_CLIENTE_ID = @GRUPO_CLIENTE_ID)
	)
	AND MUNICIPIO.MUNICIPIO_ID = @ORIGEM_ID
	AND LIGA_REGIAO.TAB_STATUS_ID = 1
	AND LIGA_REGIAO_ITEM.TAB_STATUS_ID = 1
	AND REGIAO.TAB_STATUS_ID = 1
	AND REGIAO_MUNIC.TAB_STATUS_ID = 1
	AND MUNICIPIO.TAB_STATUS_ID = 1
	
IF ISNULL(@REGIAO_ORIGEM,'') = ''
	BEGIN

		SELECT 
			@REGIAO_ORIGEM = LOCALIDADE.DESC_LOCALIDADE
		FROM
			LIGA_REGIAO
			INNER JOIN LIGA_REGIAO_ITEM ON LIGA_REGIAO.LIGA_REGIAO_ID = LIGA_REGIAO_ITEM.LIGA_REGIAO_ID
			INNER JOIN LOCALIDADE ON LIGA_REGIAO_ITEM.LOCALIDADE_ID = LOCALIDADE.LOCALIDADE_ID
		WHERE
			(	LIGA_REGIAO.CLIENTE_ID = @CLIENTE_ID 
					OR 
				LIGA_REGIAO.CLIENTE_ID IN (SELECT PESSOA_ID FROM VCLIENTE WHERE GRUPO_CLIENTE_ID = @GRUPO_CLIENTE_ID)
			)
			AND LOCALIDADE.CEP_INI >= @CEP_ORIGEM 
			AND LOCALIDADE.CEP_FIM <= @CEP_ORIGEM 
			AND LIGA_REGIAO.TAB_STATUS_ID = 1
			AND LIGA_REGIAO_ITEM.TAB_STATUS_ID = 1
			AND LOCALIDADE.TAB_STATUS_ID = 1



	END

IF ISNULL(@REGIAO_ORIGEM,'') = ''
	BEGIN
		SELECT 
			@REGIAO_ORIGEM = REGIAO.NOME
		FROM
			REGIAO_MUNIC
			INNER JOIN REGIAO ON REGIAO_MUNIC.REGIAO_ID = REGIAO.REGIAO_ID
			INNER JOIN MUNICIPIO ON REGIAO_MUNIC.MUNICIPIO_ID = MUNICIPIO.MUNICIPIO_ID
		WHERE
			MUNICIPIO.MUNICIPIO_ID = @ORIGEM_ID
			AND REGIAO_MUNIC.TAB_STATUS_ID = 1
			AND MUNICIPIO.TAB_STATUS_ID = 1	
			AND REGIAO.TAB_STATUS_ID = 1
			AND REGIAO.REGIAO_ID not IN (	SELECT LIGA_REGIAO_ITEM.REGIAO_ID 
							FROM LIGA_REGIAO_ITEM 
							WHERE TAB_STATUS_ID = 1
							AND LIGA_REGIAO_ITEM.REGIAO_ID = REGIAO_MUNIC.REGIAO_ID
						 )
	END

IF ISNULL(@REGIAO_ORIGEM,'') = ''
	BEGIN
		SELECT 
			@REGIAO_ORIGEM = LOCALIDADE.DESC_LOCALIDADE
		FROM
			LOCALIDADE
		WHERE
			LOCALIDADE.CEP_INI >= @CEP_ORIGEM 
			AND LOCALIDADE.CEP_FIM <= @CEP_ORIGEM 
			AND LOCALIDADE.TAB_STATUS_ID = 1
			AND LOCALIDADE_ID not IN (	SELECT LOCALIDADE_ID 
							FROM LIGA_REGIAO_ITEM 
							WHERE TAB_STATUS_ID = 1
							AND LIGA_REGIAO_ITEM.LOCALIDADE_ID = LOCALIDADE.LOCALIDADE_ID
						 )
	END

return ISNULL(@REGIAO_ORIGEM,'')


END

 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_RET_REG_DEST_LIGADA_CLI]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_040_RET_REG_DEST_LIGADA_CLI](
     @DOCTO_TRANSPORTE_ID       INT
	) RETURNS varchar(299)  
as  
BEGIN  


DECLARE @REGIAO_DESTINO VARCHAR(80),
		@CLIENTE_ID		INT,
		@DESTINO_ID		INT,
		@GRUPO_CLIENTE_ID	INT,		
		@CEP_DESTINO	VARCHAR(9)

SELECT 
	@DESTINO_ID = DESTINO_ID,
	@CLIENTE_ID = CLIENTE_ID,
	@GRUPO_CLIENTE_ID = GRUPO_CLIENTE.GRUPO_CLIENTE_ID,
	@CEP_DESTINO = VEND_PES_DES.CEP
FROM
	DOCTO_TRANSPORTE
	INNER JOIN VENDERECO_PESSOA VEND_PES_DES ON DOCTO_TRANSPORTE.END_DESTINATARIO_ID = VEND_PES_DES.ENDERECO_PESSOA_ID
	LEFT JOIN VCLIENTE ON DOCTO_TRANSPORTE.CLIENTE_ID = VCLIENTE.PESSOA_ID
	LEFT JOIN GRUPO_CLIENTE ON VCLIENTE.GRUPO_CLIENTE_ID = GRUPO_CLIENTE.GRUPO_CLIENTE_ID
WHERE 
	DOCTO_TRANSPORTE_ID = @DOCTO_TRANSPORTE_ID

--BUSCA REGIAO DESTINO
SELECT 
	@REGIAO_DESTINO = REGIAO.NOME
FROM
	LIGA_REGIAO
	INNER JOIN LIGA_REGIAO_ITEM ON LIGA_REGIAO.LIGA_REGIAO_ID = LIGA_REGIAO_ITEM.LIGA_REGIAO_ID
	INNER JOIN REGIAO ON LIGA_REGIAO_ITEM.REGIAO_ID = REGIAO.REGIAO_ID
	INNER JOIN REGIAO_MUNIC ON REGIAO.REGIAO_ID = REGIAO_MUNIC.REGIAO_ID
	INNER JOIN MUNICIPIO ON REGIAO_MUNIC.MUNICIPIO_ID = MUNICIPIO.MUNICIPIO_ID
WHERE
	(	LIGA_REGIAO.CLIENTE_ID = @CLIENTE_ID 
			OR 
		LIGA_REGIAO.CLIENTE_ID IN (SELECT PESSOA_ID FROM VCLIENTE WHERE GRUPO_CLIENTE_ID = @GRUPO_CLIENTE_ID)
	)
	AND MUNICIPIO.MUNICIPIO_ID = @DESTINO_ID
	AND LIGA_REGIAO.TAB_STATUS_ID = 1
	AND LIGA_REGIAO_ITEM.TAB_STATUS_ID = 1
	AND REGIAO.TAB_STATUS_ID = 1
	AND REGIAO_MUNIC.TAB_STATUS_ID = 1
	AND MUNICIPIO.TAB_STATUS_ID = 1	

IF ISNULL(@REGIAO_DESTINO,'') = ''
	BEGIN
		SELECT 
			@REGIAO_DESTINO = LOCALIDADE.DESC_LOCALIDADE
		FROM
			LIGA_REGIAO
			INNER JOIN LIGA_REGIAO_ITEM ON LIGA_REGIAO.LIGA_REGIAO_ID = LIGA_REGIAO_ITEM.LIGA_REGIAO_ID
			INNER JOIN LOCALIDADE ON LIGA_REGIAO_ITEM.LOCALIDADE_ID = LOCALIDADE.LOCALIDADE_ID
		WHERE
			(	LIGA_REGIAO.CLIENTE_ID = @CLIENTE_ID 
					OR 
				LIGA_REGIAO.CLIENTE_ID IN (SELECT PESSOA_ID FROM VCLIENTE WHERE GRUPO_CLIENTE_ID = @GRUPO_CLIENTE_ID)
			)
			AND LOCALIDADE.CEP_INI >= @CEP_DESTINO 
			AND LOCALIDADE.CEP_FIM <= @CEP_DESTINO 
			AND LIGA_REGIAO.TAB_STATUS_ID = 1
			AND LIGA_REGIAO_ITEM.TAB_STATUS_ID = 1
			AND LOCALIDADE.TAB_STATUS_ID = 1
	END 

IF ISNULL(@REGIAO_DESTINO,'') = ''
	BEGIN
		SELECT 
			@REGIAO_DESTINO = REGIAO.NOME
		FROM
			REGIAO_MUNIC
			INNER JOIN REGIAO ON REGIAO_MUNIC.REGIAO_ID = REGIAO.REGIAO_ID
			INNER JOIN MUNICIPIO ON REGIAO_MUNIC.MUNICIPIO_ID = MUNICIPIO.MUNICIPIO_ID
		WHERE
			MUNICIPIO.MUNICIPIO_ID = @DESTINO_ID
			AND REGIAO_MUNIC.TAB_STATUS_ID = 1
			AND MUNICIPIO.TAB_STATUS_ID = 1	
			AND REGIAO.TAB_STATUS_ID = 1
			AND REGIAO.REGIAO_ID not IN (	SELECT LIGA_REGIAO_ITEM.REGIAO_ID 
							FROM LIGA_REGIAO_ITEM 
							WHERE TAB_STATUS_ID = 1
							AND LIGA_REGIAO_ITEM.REGIAO_ID = REGIAO_MUNIC.REGIAO_ID
						 )
	END

IF ISNULL(@REGIAO_DESTINO,'') = ''
	BEGIN
		SELECT 
			@REGIAO_DESTINO = LOCALIDADE.DESC_LOCALIDADE
		FROM
			LOCALIDADE
		WHERE
			LOCALIDADE.CEP_INI >= @CEP_DESTINO 
			AND LOCALIDADE.CEP_FIM <= @CEP_DESTINO 
			AND LOCALIDADE.TAB_STATUS_ID = 1
			AND LOCALIDADE_ID not IN (	SELECT LOCALIDADE_ID 
							FROM LIGA_REGIAO_ITEM 
							WHERE TAB_STATUS_ID = 1
							AND LIGA_REGIAO_ITEM.LOCALIDADE_ID = LOCALIDADE.LOCALIDADE_ID
						 )
	END

return ISNULL(@REGIAO_DESTINO,'')


END

 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_FORA_PRAZO_JUST]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_038_VER_FORA_PRAZO_JUST](
     @DOCTO_TRANSPORTE_ID       INT
	) RETURNS INT  
as  
BEGIN  
	DECLARE @OUT_RETORNO   INT,
			@VCONTADOR     INT

	 /*
	 SE A FUNCAO RETORNAR 0 E PORQUE N?O E JUSTIFICADO
	 SE A FUNCAO RETORNAR 1 E PORQUE E FORA DO PRAZO JUSTIFICADO
	 */
	 SELECT @OUT_RETORNO = 0
	 SELECT @VCONTADOR = 0

  	 SELECT @VCONTADOR = COUNT(A.TRACKING_ID)
	 FROM 
		TRACKING AS A,
	    TAB_TIPO_TRACKING AS B
	 WHERE 
		A.TAB_TIPO_TRACKING_ID = B.TAB_TIPO_TRACKING_ID
		AND A.DOCTO_TRANSPORTE_ID  = @DOCTO_TRANSPORTE_ID
		AND ISNULL(A.TAB_STATUS_ID, 1) = 1
		AND ISNULL(B.INDIC_RESPONS_TRANSP,'NULO') = 'S'

	 IF ISNULL(@VCONTADOR,0) > 0 
	 	SELECT @OUT_RETORNO = 1
	 

	 RETURN(@OUT_RETORNO)

END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_BUSCA_ULT_OCORR02]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_038_BUSCA_ULT_OCORR02]
(
	 @IN_DOCTO_TRANSPORTE_ID INT
	,@IN_NOTA_FISCAL_ID INT
	,@IN_TIPO_RESULTADO INT
)
RETURNS VARCHAR
AS
BEGIN

DECLARE @VAR_NUM_COD_OCOR_CT   VARCHAR(10) = NULL;
DECLARE @VAR_DESC_OCOR_CT      VARCHAR(60) = NULL;
DECLARE @VAR_DATA_TRACKING_CT  DATETIME = NULL;
DECLARE @VAR_TRACKING_ID_CT    INT = NULL;
DECLARE @VAR_OBSERVACAO_CT     VARCHAR(255) = NULL;
DECLARE @VAR_INDIC_ENTREGA_CT  CHAR(1) = NULL;

DECLARE @VAR_NUM_COD_OCOR_NF   INT = NULL;
DECLARE @VAR_DESC_OCOR_NF      VARCHAR(60) = NULL;
DECLARE @VAR_DATA_TRACKING_NF  DATETIME  = NULL;
DECLARE @VAR_TRACKING_ID_NF    INT = NULL;
DECLARE @VAR_OBSERVACAO_NF     VARCHAR(255) = NULL;
DECLARE @VAR_INDIC_ENTREGA_NF  CHAR(1) = NULL; 

DECLARE @VAR_NUM_COD_OCOR      INT = NULL;
DECLARE @VAR_DESC_OCOR         VARCHAR(60) = NULL;
DECLARE @VAR_DATA_TRACKING     DATETIME  = NULL;
DECLARE @VAR_TRACKING_ID       INT = NULL;
DECLARE @VAR_OBSERVACAO        VARCHAR(255) = NULL;  
DECLARE @VAR_INDIC_ENTREGA     CHAR(1) = NULL; 
  
DECLARE @VAR_EXISTE_ENTREGA    INT;


--VERIFICA SE JAH EXISTE A OCOR FINALIZADORA
    SELECT @VAR_EXISTE_ENTREGA = COUNT(*)
    FROM DOCTO_TRANSPORTE DT
    WHERE DT.DOCTO_TRANSPORTE_ID =   @IN_DOCTO_TRANSPORTE_ID
     AND DT.DATA_CHEGADA_CLIENTE_EFETIVA IS NOT NULL;

--SELECIONA INFORMACOES DO CTRC
    SELECT
       @VAR_NUM_COD_OCOR_CT  = RIGHT ('000'  + CONVERT(VARCHAR,  TTR.NUM_COD_TROCA_ARQUIVO_NUM), 3) 
      ,@VAR_DESC_OCOR_CT = TTR.DESC_TIPO_TRACKING  
      ,@VAR_DATA_TRACKING_CT = TR.DATA_TRACKING        
      ,@VAR_TRACKING_ID_CT = TR.TRACKING_ID          
      ,@VAR_OBSERVACAO_CT = TR.OBSERVACAO           
      ,@VAR_INDIC_ENTREGA_CT = TTR.INDIC_ENTREGA
    FROM
      TRACKING TR
      INNER JOIN TAB_TIPO_TRACKING TTR
      ON TR.TAB_TIPO_TRACKING_ID = TTR.TAB_TIPO_TRACKING_ID
      WHERE TR.TRACKING_ID = (SELECT MAX(TRR.TRACKING_ID) FROM TRACKING TRR WHERE TRR.DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID)
      AND TR.DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID
      AND ISNULL(TR.TAB_STATUS_ID, 1) = 1
      AND (TTR.INDIC_ENTREGA = 'S' OR @VAR_EXISTE_ENTREGA = 0)


--SELECIONA INFORMACOES DA NOTA FISCAL
    SELECT
       @VAR_NUM_COD_OCOR_NF = RIGHT ('000'  + CONVERT(VARCHAR,  TTR.NUM_COD_TROCA_ARQUIVO_NUM), 3) 
      ,@VAR_DESC_OCOR_NF  = TTR.DESC_TIPO_TRACKING  
      ,@VAR_DATA_TRACKING_NF  = TR.DATA_TRACKING        
      ,@VAR_TRACKING_ID_NF = TR.TRACKING_ID          
      ,@VAR_OBSERVACAO_NF  = TR.OBSERVACAO           
      ,@VAR_INDIC_ENTREGA_NF = TTR.INDIC_ENTREGA
    FROM
      TRACKING TR
      INNER JOIN TAB_TIPO_TRACKING TTR
      ON TR.TAB_TIPO_TRACKING_ID = TTR.TAB_TIPO_TRACKING_ID
      WHERE TR.TRACKING_ID = (SELECT MAX(TRR.TRACKING_ID) FROM TRACKING TRR WHERE TRR.NOTA_FISCAL_ID = @IN_NOTA_FISCAL_ID)
      AND TR.NOTA_FISCAL_ID = @IN_NOTA_FISCAL_ID
      AND ISNULL(TR.TAB_STATUS_ID, 1) = 1
      AND (TTR.INDIC_ENTREGA = 'S' OR @VAR_EXISTE_ENTREGA = 0);


--SELECIONANDO MAIOR INFORMACAO:
  IF (@VAR_DATA_TRACKING_CT >= @VAR_DATA_TRACKING_NF) 
	 OR (@VAR_DATA_TRACKING_NF IS NULL) 
    BEGIN
		SET @VAR_NUM_COD_OCOR       = @VAR_NUM_COD_OCOR_CT;
		SET @VAR_DESC_OCOR          = @VAR_DESC_OCOR_CT;
		SET @VAR_DATA_TRACKING      = @VAR_DATA_TRACKING_CT;
		SET @VAR_TRACKING_ID        = @VAR_TRACKING_ID_CT;
		SET @VAR_OBSERVACAO         = @VAR_OBSERVACAO_CT; 
		SET @VAR_INDIC_ENTREGA      = @VAR_INDIC_ENTREGA_CT;    
    END
  ELSE
    BEGIN
		SET @VAR_NUM_COD_OCOR       = @VAR_NUM_COD_OCOR_NF;
		SET @VAR_DESC_OCOR          = @VAR_DESC_OCOR_NF;
		SET @VAR_DATA_TRACKING      = @VAR_DATA_TRACKING_NF;
		SET @VAR_TRACKING_ID        = @VAR_TRACKING_ID_NF;  
		SET @VAR_OBSERVACAO         = @VAR_OBSERVACAO_NF;
		SET @VAR_INDIC_ENTREGA      = @VAR_INDIC_ENTREGA_NF;
    END
  
  IF @VAR_TRACKING_ID IS NULL 
  RETURN NULL;
     
  -- 1 - RETORNA DATA
  IF @IN_TIPO_RESULTADO = 1 
  RETURN CONVERT(VARCHAR, @VAR_DATA_TRACKING, 103);

  -- 2 - RETORNA DATA E HORA
  ELSE IF @IN_TIPO_RESULTADO = 2
  RETURN CONVERT(VARCHAR, @VAR_DATA_TRACKING, 103) + ' ' + CONVERT(VARCHAR(5), @VAR_DATA_TRACKING, 108)
  
  -- 3 - RETORNA DESCRICAO
  ELSE IF @IN_TIPO_RESULTADO = 3 
  RETURN CONVERT(VARCHAR, @VAR_DESC_OCOR);
 
  -- 4 - RETORNA CODIGO DA OCORRENCIA
  ELSE IF @IN_TIPO_RESULTADO = 4
  RETURN CONVERT(VARCHAR, @VAR_NUM_COD_OCOR);

  -- 5 - RETORNA CODIGO DA OCORRENCIA / DESCRIÃÃO / DATA
  ELSE IF @IN_TIPO_RESULTADO = 5 
  RETURN CONVERT(VARCHAR, @VAR_NUM_COD_OCOR) + ' - ' + CONVERT(VARCHAR, @VAR_DESC_OCOR) + ' - ' + CONVERT(VARCHAR, @VAR_DATA_TRACKING, 103) + ' ' + CONVERT(VARCHAR(5), @VAR_DATA_TRACKING, 108);
 
  -- 6 - RETORNA TRACKING_ID
  ELSE IF @IN_TIPO_RESULTADO = 6 
  RETURN CONVERT(VARCHAR, @VAR_TRACKING_ID);
  
  -- 7 - RETORNA OBSERVACAO
  ELSE IF @IN_TIPO_RESULTADO = 7 
  RETURN CONVERT(VARCHAR, @VAR_OBSERVACAO);    
  
  -- 8 - RETORNA INDICA ENTREGA
  ELSE IF @IN_TIPO_RESULTADO = 8 
  RETURN CONVERT(VARCHAR, @VAR_INDIC_ENTREGA);
  
  -- 9 - RETORNA OCOR DE ENTREGA
  ELSE IF @IN_TIPO_RESULTADO = 9 
  RETURN CONVERT(VARCHAR, @VAR_INDIC_ENTREGA);
  


	RETURN 'TIPO DE RESULTADO NÃO TRATADO ' + CHAR(10)
	+ '1 - RETORNA DATA' + CHAR(10)
	+ '2 - RETORNA DATA E HORA' + CHAR(10) 
	+ '3 - RETORNA DESCRICAO' + CHAR(10)
	+ '4 - RETORNA CODIGO DA OCORRENCIA' + CHAR(10)
	+ '5 - RETORNA CODIGO DA OCORRENCIA - DESCRIÃÃO - DATA' + CHAR(10)
	+ '6 - RETORNA TRACKING_ID' + CHAR(10) 
	+ '7 - RETORNA OBSERVACAO' + CHAR(10)
	+ '8 - RETORNA INDICA ENTREGA';
  
END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_TABLE_EMAIL_PREFAT01]    Script Date: 21/07/2015 16:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/*
drop function fn_040_table_email_prefat01
select dbo.fn_040_table_email_prefat01(38919) 
*/

create function [dbo].[FN_040_TABLE_EMAIL_PREFAT01] (@IN_DOCTO_PAGTO_ID INT)
returns VARCHAR(MAX)
BEGIN 

 DECLARE @VAR_TABLE VARCHAR(MAX),
		 @VAR_TOTAL NUMERIC(15,2)

 SELECT @VAR_TABLE = '<TABLE>'

 SELECT @VAR_TABLE = @VAR_TABLE + '<TR>'
								+ '<TD ALIGN=''CENTER''><B>NÂº CTRC</B></TD>'
								+ '<TD ALIGN=''CENTER''><B>Shipment</B></TD>'
								+ '<TD ALIGN=''CENTER''><B>Valor</B></TD>'
								+ '</TR>'

 SELECT @VAR_TABLE = @VAR_TABLE + '<TR>' 
								+ '<TD ALIGN=''CENTER''>' + CONVERT(VARCHAR,ISNULL(DCT_CTRC.ID_SISTEMA_EXTERNO,'')) + '</TD>'
								+ '<TD ALIGN=''CENTER''>' + CONVERT(VARCHAR,ISNULL(DCT_SHIP.NUM_DOCTO_TRANSPORTE,'')) + '</TD>'
								+ '<TD ALIGN=''CENTER''>' + DBO.FN_CGS_EDITA_VALOR_CAMPO_TEXTO_N(ISNULL(DCT_SHIP.VAL_TOTAL,0),'0,00',2) + '</TD>' 
								+ '</TR>' 
   FROM DOCTO_TRANSP_PAGTO DCT_FAT
		INNER JOIN DOCTO_TRANSPORTE DCT_CTRC ON DCT_FAT.DOCTO_TRANSPORTE_ID = DCT_CTRC.DOCTO_TRANSPORTE_ID										    
										   AND DCT_CTRC.TAB_TIPO_DOCTO_TRANSP_ID IN (1,4)
										   AND DCT_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_CTRC ON DCT_CTRC.DOCTO_TRANSPORTE_ID = NF_CTRC.DOCTO_TRANSPORTE_ID
									 AND NF_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_SHIP ON NF_CTRC.NOTA_FISCAL_ID = NF_SHIP.NOTA_FISCAL_PAI_ID
									 AND NF_SHIP.TAB_STATUS_ID = 1
		INNER JOIN DOCTO_TRANSPORTE DCT_SHIP ON NF_SHIP.DOCTO_TRANSPORTE_ID = DCT_SHIP.DOCTO_TRANSPORTE_ID
										   AND DCT_SHIP.TAB_TIPO_DOCTO_TRANSP_ID IN (401)
										   AND DCT_SHIP.TAB_STATUS_ID = 1
  WHERE DCT_FAT.DOCTO_PAGTO_ID = @IN_DOCTO_PAGTO_ID
	AND DCT_FAT.TAB_STATUS_ID = 1

 SELECT @VAR_TOTAL = ISNULL(SUM(DCT_SHIP.VAL_TOTAL),0)
   FROM DOCTO_TRANSP_PAGTO DCT_FAT
		INNER JOIN DOCTO_TRANSPORTE DCT_CTRC ON DCT_FAT.DOCTO_TRANSPORTE_ID = DCT_CTRC.DOCTO_TRANSPORTE_ID										    
										   AND DCT_CTRC.TAB_TIPO_DOCTO_TRANSP_ID IN (1,4)
										   AND DCT_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_CTRC ON DCT_CTRC.DOCTO_TRANSPORTE_ID = NF_CTRC.DOCTO_TRANSPORTE_ID
									 AND NF_CTRC.TAB_STATUS_ID = 1
		INNER JOIN NOTA_FISCAL NF_SHIP ON NF_CTRC.NOTA_FISCAL_ID = NF_SHIP.NOTA_FISCAL_PAI_ID
									 AND NF_SHIP.TAB_STATUS_ID = 1
		INNER JOIN DOCTO_TRANSPORTE DCT_SHIP ON NF_SHIP.DOCTO_TRANSPORTE_ID = DCT_SHIP.DOCTO_TRANSPORTE_ID
										   AND DCT_SHIP.TAB_TIPO_DOCTO_TRANSP_ID IN (401)
										   AND DCT_SHIP.TAB_STATUS_ID = 1
  WHERE DCT_FAT.DOCTO_PAGTO_ID = @IN_DOCTO_PAGTO_ID
	AND DCT_FAT.TAB_STATUS_ID = 1

 SELECT @VAR_TABLE = @VAR_TABLE + '<TR>'
								+ '<TD ALIGN=''RIGHT'' COLSPAN=''2''><B>Total</B></TD>'
								+ '<TD ALIGN=''CENTER''>' + DBO.FN_CGS_EDITA_VALOR_CAMPO_TEXTO_N(ISNULL(@VAR_TOTAL,0),'0,00',2) + '</TD>'
								+ '</TR>'

 SELECT @VAR_TABLE = @VAR_TABLE + '</TABLE>'

 RETURN @VAR_TABLE

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_VEIC_TRANSP01]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create
FUNCTION [dbo].[FN_038_VER_VEIC_TRANSP01](
         @IN_DOCTO_TRANSPORTE_ID int
         ) RETURNS varchar(50)
          
AS

BEGIN

  declare
     @VAR_DESC_TIPO_VEICULO varchar(50);
   
   BEGIN
     SELECT @VAR_DESC_TIPO_VEICULO = TTV.DESC_TIPO_VEICULO
     FROM TAB_TIPO_VEICULO TTV
     WHERE TAB_TIPO_VEICULO_ID in (SELECT DOCTO_TRANSPORTE.TAB_TIPO_VEICULO_ID
                                  FROM DOCTO_TRANSPORTE
                                  WHERE DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID);
   --EXCEPTION
   --  WHEN OTHERS THEN
   --  RETURN NULL;
   END;
                                
                                
   RETURN @VAR_DESC_TIPO_VEICULO;


END


GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_RENTABILIDADE]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create
FUNCTION [dbo].[FN_038_VER_RENTABILIDADE](
                @IN_VAL_TOTAL           numeric(15,2),
                @IN_VAL_FRETE_PROPOSTA  numeric(15,2),
                @IN_ALIQUOTA_ICMS       numeric(7,4),
                @IN_ALIQUOTA_ISS        numeric(7,4),
                @IN_EMBUTIR_ICMS        varchar(2)
                ) RETURNS numeric
as

BEGIN

 declare
   @VAR_RENTABILIDADE numeric(10,2);


     IF @IN_EMBUTIR_ICMS = 'S'   --CALCULA RENTABILIDADE COM ICMS
       BEGIN 
         set @VAR_RENTABILIDADE = ROUND((((@IN_VAL_TOTAL - ROUND(ISNULL(ISNULL(@IN_ALIQUOTA_ISS, 0) * @IN_VAL_TOTAL / 100, 0), 2) - ROUND(ISNULL(ISNULL(@IN_ALIQUOTA_ICMS , 0) * @IN_VAL_TOTAL / 100, 0), 2)) - ISNULL(@IN_VAL_FRETE_PROPOSTA, 0)) / 
            (@IN_VAL_TOTAL - ROUND(ISNULL(ISNULL(@IN_ALIQUOTA_ISS, 0) * @IN_VAL_TOTAL / 100, 0), 2) - ROUND(ISNULL(ISNULL(@IN_ALIQUOTA_ICMS , 0) * @IN_VAL_TOTAL / 100, 0), 2))) * 100, 2);
       END;

     ELSE
       BEGIN 
         set @VAR_RENTABILIDADE = ROUND(((@IN_VAL_TOTAL - ISNULL(@IN_VAL_FRETE_PROPOSTA, 0)) / (@IN_VAL_TOTAL)) * 100, 2);
       END;

     RETURN @VAR_RENTABILIDADE;     
          
END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_CENTRO_CUSTO]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_038_VER_CENTRO_CUSTO]
(
	 @IN_TABELA_PRECO_CLIENTE	INT
	,@IN_TAB_TIPO_PRODUTO_ID	INT
	,@IN_TAB_TIPO_VEICULO_ID	INT
	,@IN_TAB_TIPO_DESPACHO      INT
)
RETURNS VARCHAR(60)
AS
BEGIN

	DECLARE @VAR_CENTRO_CUSTO_CLIENTE_ID    INT
	DECLARE @VAR_CENTRO_CUSTO_CLIENTE		VARCHAR(60)

	IF @IN_TAB_TIPO_DESPACHO = 4
	BEGIN
		SELECT TOP 1 @VAR_CENTRO_CUSTO_CLIENTE_ID = TC.CENTRO_CUSTO_CLIENTE_ID
		FROM TABELA_PRECO_CLIENTE TC 
		WHERE TC.TABELA_PRECO_CLIENTE_ID = @IN_TABELA_PRECO_CLIENTE;
	END
	ELSE IF @IN_TAB_TIPO_DESPACHO = 2
	BEGIN
		SELECT TOP 1 @VAR_CENTRO_CUSTO_CLIENTE_ID = TC.CENTRO_CUSTO_CLIENTE_ID
		FROM TABELA_PRECO_CLIENTE TC
		INNER JOIN TABELA_VIAGEM TV 
			ON TC.TABELA_PRECO_CLIENTE_ID = TV.TABELA_PRECO_CLIENTE_ID
		WHERE 
			TV.TABELA_PRECO_CLIENTE_ID = @IN_TABELA_PRECO_CLIENTE
		AND COALESCE(TV.TAB_TIPO_VEICULO_ID, -1) = COALESCE(@IN_TAB_TIPO_VEICULO_ID, -1) 
		AND (
			COALESCE(TV.TAB_TIPO_PRODUTO_ID, -1) = COALESCE(@IN_TAB_TIPO_PRODUTO_ID, -1) 
			OR TV.TAB_TIPO_PRODUTO_ID IS NULL
		)
		AND ORIGEM_ID IS NULL
		AND DESTINO_ID IS NULL
		AND TV.TAB_STATUS_ID = 1;
	END

	SELECT TOP 1 @VAR_CENTRO_CUSTO_CLIENTE = CENTRO_CUSTO
	FROM CENTRO_CUSTO_CLIENTE
	WHERE CENTRO_CUSTO_CLIENTE_ID = @VAR_CENTRO_CUSTO_CLIENTE_ID
	
	RETURN @VAR_CENTRO_CUSTO_CLIENTE;
END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_ID_EXTERNO]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_038_VER_ID_EXTERNO]
(
	 @IN_TABELA_PRECO_CLIENTE INT
	,@IN_TAB_TIPO_PRODUTO_ID INT
	,@IN_TAB_TIPO_VEICULO_ID INT
	,@IN_TAB_TIPO_DESPACHO	 INT
	,@IN_DOCTO_TRANSPORTE_ID INT
)
RETURNS VARCHAR(15)
AS
BEGIN
	DECLARE @VAR_ID_SISTEMA_EXTERNO VARCHAR(15)

	IF @IN_TAB_TIPO_DESPACHO = 4
	BEGIN
		SELECT TOP 1 @VAR_ID_SISTEMA_EXTERNO = ID_SISTEMA_EXTERNO 
		FROM TABELA_PRECO_CLIENTE TC 
		WHERE TC.TABELA_PRECO_CLIENTE_ID = @IN_TABELA_PRECO_CLIENTE;
	END

	ELSE IF @IN_TAB_TIPO_DESPACHO = 2
	BEGIN
		SELECT TOP 1 @VAR_ID_SISTEMA_EXTERNO = ID_SISTEMA_EXTERNO
		FROM TABELA_VIAGEM TV 
		WHERE TV.TABELA_PRECO_CLIENTE_ID = @IN_TABELA_PRECO_CLIENTE
		AND COALESCE(TV.TAB_TIPO_VEICULO_ID, -1) = COALESCE(@IN_TAB_TIPO_VEICULO_ID, -1) 
		AND (
			COALESCE(TV.TAB_TIPO_PRODUTO_ID, -1) = COALESCE(@IN_TAB_TIPO_PRODUTO_ID, -1) 
			OR TV.TAB_TIPO_PRODUTO_ID IS NULL
		)
		AND ORIGEM_ID IS NULL
		AND DESTINO_ID IS NULL
		AND TAB_STATUS_ID = 1
	END
	
	ELSE
	BEGIN
		SELECT @VAR_ID_SISTEMA_EXTERNO = ID_SISTEMA_EXTERNO
		FROM DOCTO_TRANSPORTE
		WHERE DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID
	END

	RETURN @VAR_ID_SISTEMA_EXTERNO
END


GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_PROTP_LIS_NF_CTRC]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_038_PROTP_LIS_NF_CTRC]
(
	@IN_DOCTO_TRANSPORTE_ID AS NUMERIC(18)
)
RETURNS VARCHAR(MAX)
AS
BEGIN

	DECLARE @RETORNO AS VARCHAR(MAX) = ''

	IF COALESCE(@IN_DOCTO_TRANSPORTE_ID,0) <= 0
	BEGIN
		RETURN ''
	END

	;WITH 
	AUX AS 
	(
		  SELECT 
				 nota_fiscal = CONVERT(VARCHAR(MAX), NF.nota_fiscal)
				,ROW = ROW_NUMBER() OVER(ORDER BY NF.nota_fiscal)
		  FROM DOCTO_TRANSPORTE DT
		  INNER JOIN NOTA_FISCAL NF
				ON DT.DOCTO_TRANSPORTE_ID = NF.DOCTO_TRANSPORTE_ID
		  WHERE DT.DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID
      			AND DT.tab_status_id = 1
				AND NF.TAB_STATUS_ID = 1

	)
	,
	AUX2 AS
	(
		  SELECT 
				 nota_fiscal
				,ROW
				,ROW_PAI = CASE ROW WHEN 1 THEN NULL ELSE ROW - 1 END
		  FROM AUX
	)
	,CONCATENAR AS
	(
		  SELECT
				nota_fiscal
				,ROW
		  FROM AUX2 
		  WHERE ROW_PAI IS NULL

		  UNION ALL

		  SELECT
				nota_fiscal = A.nota_fiscal + ' / ' + B.nota_fiscal
				,A.ROW
		  FROM AUX2 A 
		  INNER JOIN CONCATENAR B 
				ON A.ROW_PAI = B.ROW
	)
	SELECT TOP 1 @RETORNO = nota_fiscal
	FROM CONCATENAR
	ORDER BY ROW DESC
	
	RETURN @RETORNO

END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_PLACA_CTRC]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_038_VER_PLACA_CTRC]
(
	@IN_DOCTO_TRANSPORTE_ID INT
)
RETURNS CHAR(7)
AS
BEGIN
	DECLARE @VAR_PLACA CHAR(7)
	DECLARE @VAR_MANIFESTO_ROD_ID INT

	SELECT @VAR_MANIFESTO_ROD_ID = MAX(MRR.MANIFESTO_ROD_ID)
	FROM MANIFESTO_ROD MRR
	INNER JOIN DOCTO_TRANSP_MANIFESTO_ROD MRD
		ON MRR.MANIFESTO_ROD_ID  = MRD.MANIFESTO_ROD_ID
	WHERE 
			MRD.DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID
		AND MRR.TAB_STATUS_ID = 1 
		AND MRD.TAB_STATUS_ID = 1

	SELECT TOP 1 @VAR_PLACA = VF.PLACA
	FROM MANIFESTO_ROD MRR
	INNER JOIN DOCTO_TRANSP_MANIFESTO_ROD MRD
		ON MRR.MANIFESTO_ROD_ID  = MRD.MANIFESTO_ROD_ID
	INNER JOIN VEICULO_FORNECEDOR VF
		ON VF.VEICULO_FORNECEDOR_ID = MRR.VEICULO_FORNECEDOR_ID
	WHERE 
		MRD.DOCTO_TRANSPORTE_ID = @IN_DOCTO_TRANSPORTE_ID
	AND MRR.MANIFESTO_ROD_ID = @VAR_MANIFESTO_ROD_ID
	AND MRR.TAB_STATUS_ID = 1 
	AND MRD.TAB_STATUS_ID = 1
     
	RETURN @VAR_PLACA;       
END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_038_VER_REGIOES2]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_038_VER_REGIOES2]
(
	 @IN_CEP_PESQUISA CHAR(9)
	,@IN_MUNICIPIO_PESQUISA INT
	,@IN_CLIENTE_ID INT
	,@IN_PONTO_OPERACAO_ID INT
	,@IN_TABELA_PRECO_CLIENTE_ID INT
)
RETURNS VARCHAR(1000)
AS
BEGIN

	DECLARE @VAR_REGIOES_CEP VARCHAR(1000)
	DECLARE @VAR_TABELA_PRECO_CLIENTE_ID INT


	IF (COALESCE(@IN_TABELA_PRECO_CLIENTE_ID, -1) = -1)
	BEGIN
	
		SELECT TOP 1 @VAR_TABELA_PRECO_CLIENTE_ID = VR.TABELA_PRECO_CLIENTE_ID
		FROM VREGIOES_CLI_FOR VR
		WHERE 
		(
			VR.PESSOA_ID = @IN_CLIENTE_ID
			OR VR.GRUPO_CLIENTE_ID = (SELECT CL.GRUPO_CLIENTE_ID FROM CLIENTE CL WHERE CL.PESSOA_ID = @IN_CLIENTE_ID)
		)
		AND VR.PONTO_OPERACAO_ID = @IN_PONTO_OPERACAO_ID
		
	END
	ELSE
	BEGIN
		SET @VAR_TABELA_PRECO_CLIENTE_ID = @IN_TABELA_PRECO_CLIENTE_ID;
	END


	;WITH AUX_CUR_REGIOES_CEP AS
	(
		SELECT RG.NOME, RG.REGIAO_ID
		FROM REGIAO RG 
		INNER JOIN REGIAO_MUNIC RM
			ON RG.REGIAO_ID = RM.REGIAO_ID
		WHERE 
				RG.TAB_STATUS_ID = 1
			AND RM.TAB_STATUS_ID = 1
			AND RM.MUNICIPIO_ID IS NULL
			AND RM.CEP_INI <= @IN_CEP_PESQUISA
			AND RM.CEP_FIM >= @IN_CEP_PESQUISA
			AND EXISTS (
				SELECT 1
				FROM VREGIOES_CLI_FOR VR
				WHERE (
						VR.PESSOA_ID = @IN_CLIENTE_ID
						OR @IN_CLIENTE_ID IS NULL
						OR VR.GRUPO_CLIENTE_ID = (SELECT CL.GRUPO_CLIENTE_ID FROM CLIENTE CL WHERE CL.PESSOA_ID = @IN_CLIENTE_ID)
					)
					AND VR.TABELA_PRECO_CLIENTE_ID = @VAR_TABELA_PRECO_CLIENTE_ID
					AND VR.PONTO_OPERACAO_ID = @IN_PONTO_OPERACAO_ID
					AND (
						VR.REGIAO_ORIGEM_ID = RG.REGIAO_ID 
						OR VR.REGIAO_DESTINO_ID = RG.REGIAO_ID)
					)    
	)
	,
	--  CURSOR CUR_REGIOES_MUNICIPIO IS
	AUX_CUR_REGIOES_MUNICIPIO AS
	(
		SELECT RG.NOME, RG.REGIAO_ID
		FROM REGIAO RG
		INNER JOIN REGIAO_MUNIC RM
			ON RG.REGIAO_ID = RM.REGIAO_ID
		WHERE 
				RG.TAB_STATUS_ID = 1
			AND RM.TAB_STATUS_ID = 1
			AND RM.MUNICIPIO_ID = @IN_MUNICIPIO_PESQUISA
			AND RM.CEP_INI IS NULL
			AND RM.CEP_FIM IS NULL 
			AND EXISTS (
				SELECT 1
				FROM VREGIOES_CLI_FOR VR
				WHERE 
				(
					VR.PESSOA_ID = @IN_CLIENTE_ID
					OR @IN_CLIENTE_ID IS NULL
					OR VR.GRUPO_CLIENTE_ID = 
						(
							SELECT CL.GRUPO_CLIENTE_ID 
							FROM CLIENTE CL 
							WHERE CL.PESSOA_ID = @IN_CLIENTE_ID
						)
				)
			AND VR.TABELA_PRECO_CLIENTE_ID = @VAR_TABELA_PRECO_CLIENTE_ID
			AND VR.PONTO_OPERACAO_ID = @IN_PONTO_OPERACAO_ID
			AND 
			(
				VR.REGIAO_ORIGEM_ID = RG.REGIAO_ID 
				OR VR.REGIAO_DESTINO_ID = RG.REGIAO_ID
			)
		)
	)
	,AUX_CONCAT AS
	(
		SELECT NOME,REGIAO_ID FROM AUX_CUR_REGIOES_MUNICIPIO
		UNION ALL
		SELECT NOME,REGIAO_ID FROM AUX_CUR_REGIOES_MUNICIPIO
		UNION ALL
		SELECT NOME,REGIAO_ID FROM AUX_CUR_REGIOES_MUNICIPIO
		UNION ALL
		SELECT NOME,REGIAO_ID FROM AUX_CUR_REGIOES_CEP
	)
	,AUX_CONCAT_2 AS
	(
		SELECT 
			 ID = ROW_NUMBER() OVER (ORDER BY REGIAO_ID)
			,IDPAI = ROW_NUMBER() OVER (ORDER BY REGIAO_ID) - 1
			,NOME
			,REGIAO_ID 
		FROM AUX_CONCAT
	)
	,AUX_CONCAT_3 AS
	(
		SELECT 
			 A.ID
			,A.IDPAI
			,NOME = CONVERT(VARCHAR(MAX),A.NOME)
			,A.REGIAO_ID 
		FROM AUX_CONCAT_2 A
		WHERE IDPAI = 0
		
		UNION ALL
		
		SELECT 
			 A.ID
			,A.IDPAI
			,NOME = A.NOME + ' / ' + CONVERT(VARCHAR(MAX),B.NOME)
			,A.REGIAO_ID 
		FROM AUX_CONCAT_3 B
		INNER JOIN AUX_CONCAT_2 A
			ON B.ID = A.IDPAI
	)
		SELECT TOP 1
			@VAR_REGIOES_CEP = NOME
		FROM AUX_CONCAT_3
		ORDER BY ID DESC
		OPTION (MAXRECURSION 10000)
		
		RETURN @VAR_REGIOES_CEP


END


GO

/****** Object:  UserDefinedFunction [dbo].[FN_048_PESSOA_CNPJ_CPF_IE]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_048_PESSOA_CNPJ_CPF_IE]
(
    @PARAM_@CNPJ_CPF VARCHAR(20),
    @PARAM_IE_RG     VARCHAR(20)
)
RETURNS INT

AS

BEGIN
    DECLARE
        @T_PESSOA TABLE
        (
            pessoa_id         INT NULL,
            indicativo_pf_pj  VARCHAR(02) NULL,
            pj_inscr_estadual VARCHAR(15) NULL,
            pj_cgc            VARCHAR(14) NULL,
            pf_cpf            VARCHAR(11) NULL
        )

    DECLARE
        @V_IE_RG               AS VARCHAR(20),
        @V_FLAG_UNICID_CNPJ_IE AS VARCHAR(01)

    DECLARE
        @B_IE_RG     AS BIGINT,
        @I_PESSOA_ID AS INT


    /*=======================================================================================================================*/

    SET @I_PESSOA_ID = NULL

    SET @V_IE_RG = @PARAM_IE_RG
    SET @V_IE_RG = REPLACE(@V_IE_RG, '.', SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, ',', SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, '-', SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, '/', SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, '\', SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, SPACE(1), SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, ':', SPACE(0))
    SET @V_IE_RG = REPLACE(@V_IE_RG, ';', SPACE(0))

    IF ISNUMERIC(@V_IE_RG) = 1
        SET @B_IE_RG = @V_IE_RG
    ELSE
        SET @B_IE_RG = NULL

    SELECT 
        @V_FLAG_UNICID_CNPJ_IE = parametro
    FROM tab_parametro_sistema 
    WHERE tab_parametro_sistema_id = 38185

    SET @V_FLAG_UNICID_CNPJ_IE = ISNULL(@V_FLAG_UNICID_CNPJ_IE, 'N')

    INSERT INTO @T_PESSOA
    SELECT
        pessoa_id,
        indicativo_pf_pj,
        pj_inscr_estadual,
        pj_cgc,
        pf_cpf
    FROM pessoa
    WHERE tab_status_id = 1
    AND 
    (
        (indicativo_pf_pj = 'PJ' AND pj_cgc = @PARAM_@CNPJ_CPF)
        OR
        (indicativo_pf_pj = 'PF' AND pf_cpf = @PARAM_@CNPJ_CPF)
    )

    UPDATE @T_PESSOA
        SET
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, '.', SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, ',', SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, '-', SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, '/', SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, '\', SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, SPACE(1), SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, ':', SPACE(0))

    UPDATE @T_PESSOA
        SET 
            pj_inscr_estadual = REPLACE(pj_inscr_estadual, ';', SPACE(0))


    IF @V_FLAG_UNICID_CNPJ_IE = 'S'
        BEGIN
            IF ISNUMERIC(@B_IE_RG) = 1
                SELECT
                    @I_PESSOA_ID = MAX(pessoa_id)
                FROM @T_PESSOA
                WHERE
                (
                    (indicativo_pf_pj = 'PJ' AND pj_cgc = @PARAM_@CNPJ_CPF)
                    OR
                    (indicativo_pf_pj = 'PF' AND pf_cpf = @PARAM_@CNPJ_CPF)
                )
                AND
                (
                    (ISNUMERIC(pj_inscr_estadual) = 1 OR pj_inscr_estadual IS NULL)
                    OR
                    (indicativo_pf_pj = 'PF')
                )
                AND
                (
                    (indicativo_pf_pj = 'PJ' AND (CAST(pj_inscr_estadual AS BIGINT) = @B_IE_RG OR @B_IE_RG IS NULL))
                    OR
                    (indicativo_pf_pj = 'PF')
                )
            ELSE
                SELECT
                    @I_PESSOA_ID = MAX(pessoa_id)
                FROM @T_PESSOA
                WHERE
                (
                    (indicativo_pf_pj = 'PJ' AND pj_cgc = @PARAM_@CNPJ_CPF)
         OR
                    (indicativo_pf_pj = 'PF' AND pf_cpf = @PARAM_@CNPJ_CPF)
                )
                AND
                (
                    (pj_inscr_estadual = 'ISENTO' OR pj_inscr_estadual IS NULL)
                    OR
                    (indicativo_pf_pj = 'PF')
                )
                AND
                (
                    (indicativo_pf_pj = 'PJ' AND pj_inscr_estadual = @PARAM_IE_RG OR @PARAM_IE_RG IS NULL)
                    OR
                    (indicativo_pf_pj = 'PF')
                )
        END
    ELSE
        SELECT
            @I_PESSOA_ID = MAX(pessoa_id)
        FROM @T_PESSOA

    RETURN @I_PESSOA_ID
END
 
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_AGRUPA_MANIF_CTRC01]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_040_AGRUPA_MANIF_CTRC01] (@IN_MANIFESTO_ID INT)
RETURNS VARCHAR(7999) 
WITH EXECUTE AS CALLER
AS
BEGIN

 DECLARE @VAR_NUM_CTRC VARCHAR(7999),
		 @VAR_NUM_CTRC_AGRUP VARCHAR(7999)

 SET @VAR_NUM_CTRC_AGRUP = ''

 WITH DOCTOS AS
 (  
  SELECT DISTINCT CONVERT(VARCHAR,DT.NUM_DOCTO_TRANSPORTE) "NUM_DOCTO_TRANSPORTE"
    FROM MANIFESTO_ROD MR
         INNER JOIN DOCTO_TRANSP_MANIFESTO_ROD DTR ON MR.MANIFESTO_ROD_ID = DTR.MANIFESTO_ROD_ID
         INNER JOIN DOCTO_TRANSPORTE DT ON DT.DOCTO_TRANSPORTE_ID = DTR.DOCTO_TRANSPORTE_ID
   WHERE MR.MANIFESTO_ROD_ID = @IN_MANIFESTO_ID
     AND DTR.TAB_STATUS_ID = 1
 )
 SELECT @VAR_NUM_CTRC_AGRUP = @VAR_NUM_CTRC_AGRUP + NUM_DOCTO_TRANSPORTE + ','
   FROM DOCTOS

 RETURN LEFT(@VAR_NUM_CTRC_AGRUP,LEN(@VAR_NUM_CTRC_AGRUP) - 1)

END 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_FORMATA_CNPJ]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_FORMATA_CNPJ](
    @var_cgc			   AS VARCHAR) RETURNS VARCHAR(18)
AS
BEGIN
	DECLARE
		@Result VARCHAR
		
  IF LEN(@var_cgc) = 14
	BEGIN
		SELECT @Result = SUBSTRING(@var_cgc,1,2) + '.' + SUBSTRING(@var_cgc,3,3) + '.' + SUBSTRING(@var_cgc,7,3) + '/' + SUBSTRING(@var_cgc,9,4) + '-' + SUBSTRING(@var_cgc,13,2)
	END		
  ELSE
	BEGIN
		SELECT @Result = @var_cgc
	END 
  
  return(@Result)
end 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_QUEBRA_LINHA01]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create FUNCTION [dbo].[FN_ECR_QUEBRA_LINHA01](
    @IN_PALAVRA AS VARCHAR,
    @IN_TAM_MAX NUMERIC) RETURNS int
    
AS
BEGIN
	DECLARE @RESULT  INT
	
	  IF SUBSTRING(@IN_PALAVRA, @IN_TAM_MAX, 1) = ' ' OR @IN_TAM_MAX = 0
		BEGIN
		  RETURN @IN_TAM_MAX
		END
	  ELSE
		BEGIN
		  SELECT @RESULT = DBO.FN_ECR_QUEBRA_LINHA01(@IN_PALAVRA, @IN_TAM_MAX - 1)
		END
  
	SELECT @RESULT = CASE WHEN isnull(@RESULT,0) =  0 THEN 
						@IN_TAM_MAX
					ELSE
						@RESULT
					END
  
  RETURN(@RESULT)
  
END 
 

GO

/****** Object:  UserDefinedFunction [dbo].[Fn_CGS_EDITA_CAMPO_3DECIMAL]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[Fn_CGS_EDITA_CAMPO_3DECIMAL](
    @IN_VALOR			   AS NUMERIC,
	@IN_VAL_DEFAULT    	   AS VARCHAR) RETURNS VARCHAR(30)
AS
BEGIN
	DECLARE
	@VAR_VAL_AUX_CHAR		VARCHAR(17),
	@VAR_VAL_AUX			NUMERIC(17),
	@VAR_VAL_DECIMAL		VARCHAR(4),
	@VAR_VAL_CENTENA		VARCHAR(3),
	@VAR_VAL_MILHAR			VARCHAR(3),
	@VAR_VAL_MILHAO			VARCHAR(3),
	@VAR_VAL_RESTO			VARCHAR(10),
	@VAR_TAMANHO			NUMERIC(10),
	@VAR_pos_inicio			NUMERIC(10),
	@VAR_NEGATIVO			VARCHAR(1),
	@VAR_VAL_EDT			VARCHAR(20),
	@VAR_VALOR				NUMERIC(15,2)


	SELECT @VAR_VALOR = @IN_VALOR
	SELECT @VAR_NEGATIVO = ''

	IF @VAR_VALOR = 0 OR @VAR_VALOR IS NULL
	   RETURN(@IN_VAL_DEFAULT)
	

	IF @VAR_VALOR < 0
		BEGIN
			SELECT @VAR_NEGATIVO = '-'
			SELECT @VAR_VALOR = @VAR_VALOR * -1
		END 

	SELECT @VAR_VAL_AUX = @VAR_VALOR * 1000
	SELECT @VAR_VAL_AUX_CHAR = CONVERT(VARCHAR,@VAR_VAL_AUX)

	SELECT @VAR_pos_inicio = LEN(@VAR_VAL_AUX_CHAR)

	SELECT @VAR_pos_inicio = LEN(@VAR_VAL_AUX_CHAR)
	SELECT @VAR_pos_inicio = @VAR_pos_inicio - 2

	SELECT @VAR_VAL_DECIMAL = SUBSTRING(@VAR_VAL_AUX_CHAR,@VAR_pos_inicio,3)

	IF LEN(@VAR_VAL_AUX_CHAR) > 3 
		BEGIN
			SELECT @VAR_TAMANHO = 3
			SELECT @VAR_pos_inicio = @VAR_pos_inicio - @VAR_TAMANHO

			IF @VAR_pos_inicio <= 0 
				BEGIN
					SELECT @VAR_TAMANHO = @VAR_TAMANHO + @VAR_pos_inicio - 1
					SELECT @VAR_pos_inicio =1
				END

			SELECT @VAR_VAL_CENTENA = SUBSTRING(@VAR_VAL_AUX_CHAR,@VAR_pos_inicio,@VAR_TAMANHO)
		END	
	ELSE
		BEGIN
			SELECT @VAR_VAL_CENTENA = '0'
		END 

	IF LEN(@VAR_VAL_AUX_CHAR) > 6
		BEGIN
			SELECT @VAR_TAMANHO = 3
			SELECT @VAR_pos_inicio = @VAR_pos_inicio - @VAR_TAMANHO
		
			IF @VAR_pos_inicio <= 0
				BEGIN
					SELECT @VAR_TAMANHO = @VAR_TAMANHO + @VAR_pos_inicio - 1
					SELECT @VAR_pos_inicio =1
				END 
		
			SELECT @VAR_VAL_MILHAR = SUBSTRING(@VAR_VAL_AUX_CHAR,@VAR_pos_inicio,@VAR_TAMANHO)
			SELECT @VAR_VAL_MILHAR = SUBSTRING(@VAR_VAL_AUX_CHAR,@VAR_pos_inicio,@VAR_TAMANHO)
			
		END	
	ELSE
		BEGIN
			SELECT @VAR_VAL_MILHAR = ' '
		END

	IF LEN(@VAR_VAL_AUX_CHAR) > 9
		BEGIN
			SELECT @VAR_TAMANHO = 2
			SELECT @VAR_pos_inicio = @VAR_pos_inicio - 1
			SELECT @VAR_VAL_RESTO = SUBSTRING(@VAR_VAL_AUX_CHAR,@VAR_pos_inicio,@VAR_TAMANHO)
		END	
	ELSE
		BEGIN
			SELECT @VAR_VAL_RESTO = ' '
		END 

	SELECT @VAR_VAL_EDT = RTRIM(@VAR_VAL_CENTENA) + ',' + @VAR_VAL_DECIMAL

	IF @VAR_VAL_MILHAR > ' ' 
		SELECT @VAR_VAL_EDT = RTRIM(@VAR_VAL_MILHAR) + '.' + @VAR_VAL_EDT
	

	IF @VAR_NEGATIVO > ' '
		SELECT @VAR_VAL_EDT = @VAR_NEGATIVO + @VAR_VAL_EDT
    

	RETURN(@VAR_VAL_EDT)

END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_AGREGA_NFS_DCT_CARGAS_EMBARCADAS]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_040_AGREGA_NFS_DCT_CARGAS_EMBARCADAS](@DOCTO_TRANSPORTE_ID INT,
                                                        @TIPO                CHAR(1))
RETURNS VARCHAR(5000)
AS
  BEGIN
      DECLARE @NFS VARCHAR(5000)
      DECLARE @SERIE VARCHAR(5000)
      DECLARE @RETORNO VARCHAR(5000)

      SET @NFS = ''
      SET @SERIE = ''
      SET @RETORNO = ''

      SELECT @NFS = @NFS + NOTA_FISCAL + '/',
             @SERIE = @SERIE + SERIE + '/'
      FROM   NOTA_FISCAL
      WHERE  DOCTO_TRANSPORTE_ID = @DOCTO_TRANSPORTE_ID

      IF Isnull(@TIPO, '') = 'N'
        BEGIN
            SELECT @RETORNO = @NFS
        END
      ELSE
        BEGIN
            SELECT @RETORNO = @SERIE
        END

      IF Isnull(@RETORNO, '') <> ''
        BEGIN
            RETURN Substring(@RETORNO, 1, Len(@RETORNO) - 1)
        END

      RETURN( @RETORNO )
  END


GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_ZIP_TRADUZ_TITULO01]    Script Date: 21/07/2015 16:26:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/* Drop function dbo.FN_ECR_ZIP_TRADUZ_TITULO01 */

CREATE FUNCTION [dbo].[FN_ECR_ZIP_TRADUZ_TITULO01](@IN_TXT_TITULO_TRADUZIR VARCHAR(1000))
  RETURNS VARCHAR(1000)
  WITH EXECUTE AS CALLER
AS

BEGIN

	 DECLARE @VAR_COLUNA_ID			  VARCHAR(10),
			 @VAR_TITULO              VARCHAR(1000)

	 DECLARE @TEMP_DADOS TABLE (ID INT IDENTITY, TEMP_DADOS VARCHAR(1000))

	 INSERT INTO @TEMP_DADOS
     SELECT * FROM dbo.FN_SPLIT(@IN_TXT_TITULO_TRADUZIR, '_')

	 SELECT TOP 1 @VAR_TITULO = TEMP_DADOS FROM @TEMP_DADOS ORDER BY ID DESC

	 SET @VAR_COLUNA_ID = SUBSTRING(@IN_TXT_TITULO_TRADUZIR ,3 ,CHARINDEX('__',SUBSTRING(@IN_TXT_TITULO_TRADUZIR ,4 ,LEN(@IN_TXT_TITULO_TRADUZIR))))

	 IF ISNULL(@VAR_TITULO,'') <> '' AND ISNULL(@VAR_TITULO,'') <> '@@'
		BEGIN	 
			RETURN @VAR_TITULO
		END

	 SELECT @VAR_TITULO = CO.NOME_EXTERNO
	   FROM COLUNA CO
	  WHERE CO.COLUNA_ID = @VAR_COLUNA_ID

	 IF ISNULL(@VAR_TITULO,'') = ''
	  BEGIN
		
		RETURN @IN_TXT_TITULO_TRADUZIR

	  END
	 ELSE
	  BEGIN

	   RETURN @VAR_TITULO

	  END

	 RETURN @IN_TXT_TITULO_TRADUZIR

END


 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_VER_REGIOES2]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create FUNCTION [dbo].[FN_040_VER_REGIOES2](

	 @CEP_PESQUISA             char(9),
     @MUNICIPIO_PESQUISA       INT,
     @CLIENTE_ID               INT,
     @PONTO_OPERACAO_ID        INT,
     @TABELA_PRECO_CLIENTE_ID  INT
	
	) RETURNS varchar(4000)  
as  
BEGIN  
	
	declare @AUX_TABELA_PRECO_CLIENTE_ID INT
	declare @retorno varchar(4000)
	DECLARE @REGIOES_MUNICIPIO TABLE(
		NOME	VARCHAR(100), 
		ID		INT
	)
	DECLARE @REGIOES_CEP TABLE(
		NOME	VARCHAR(100), 
		ID		INT
	)
	
	
	if isnull(@TABELA_PRECO_CLIENTE_ID, 0) <> 0
		begin
			set @AUX_TABELA_PRECO_CLIENTE_ID = @TABELA_PRECO_CLIENTE_ID
		end 
	else
		begin
			SELECT @AUX_TABELA_PRECO_CLIENTE_ID = VR.TABELA_PRECO_CLIENTE_ID
		    FROM VREGIOES_CLI_FOR VR
		    WHERE (VR.PESSOA_ID = @CLIENTE_ID
			 OR VR.GRUPO_CLIENTE_ID = (SELECT CL.GRUPO_CLIENTE_ID FROM CLIENTE CL WHERE CL.PESSOA_ID = @CLIENTE_ID))
			 AND VR.PONTO_OPERACAO_ID = @PONTO_OPERACAO_ID	
		end
		
				
	INSERT INTO @REGIOES_MUNICIPIO
		SELECT RG.NOME, RG.REGIAO_ID
		FROM REGIAO RG, REGIAO_MUNIC RM
		WHERE RG.REGIAO_ID = RM.REGIAO_ID
		AND RG.TAB_STATUS_ID = 1
		AND RM.TAB_STATUS_ID = 1
		AND RM.MUNICIPIO_ID = @MUNICIPIO_PESQUISA
		AND RM.CEP_INI IS NULL
		AND RM.CEP_FIM IS NULL 
		AND EXISTS (SELECT 1
					 FROM VREGIOES_CLI_FOR VR
					 WHERE (VR.PESSOA_ID = @CLIENTE_ID
					   OR @CLIENTE_ID IS NULL
					   OR VR.GRUPO_CLIENTE_ID = (SELECT CL.GRUPO_CLIENTE_ID FROM CLIENTE CL WHERE CL.PESSOA_ID = @CLIENTE_ID))
					   AND VR.TABELA_PRECO_CLIENTE_ID = @AUX_TABELA_PRECO_CLIENTE_ID
					   AND VR.PONTO_OPERACAO_ID = @PONTO_OPERACAO_ID
					   AND (VR.REGIAO_ORIGEM_ID = RG.REGIAO_ID OR VR.REGIAO_DESTINO_ID = RG.REGIAO_ID))

	
	INSERT INTO @REGIOES_CEP
		SELECT LOCALIDADE.DESC_LOCALIDADE, LOCALIDADE.LOCALIDADE_ID 
		FROM LOCALIDADE
			INNER JOIN FAIXA_LOCALIDADE ON FAIXA_LOCALIDADE.LOCALIDADE_ID = LOCALIDADE.LOCALIDADE_ID 
		WHERE FAIXA_LOCALIDADE.CEP_INI <= @CEP_PESQUISA
		AND FAIXA_LOCALIDADE.CEP_FIM >= @CEP_PESQUISA
		AND LOCALIDADE.TAB_STATUS_ID = 1
		AND FAIXA_LOCALIDADE.TAB_STATUS_ID = 1

	SELECT @RETORNO = ISNULL(@RETORNO,'') + NOME + char(13) FROM @REGIOES_CEP
	
	SELECT @RETORNO = ISNULL(@RETORNO,'') + NOME + char(13) FROM @REGIOES_MUNICIPIO
	
	return ISNULL(@RETORNO,'')


END


GO

/****** Object:  UserDefinedFunction [dbo].[FN_CGS_CHECA_NUMERO]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_CGS_CHECA_NUMERO](@CAMPO VARCHAR(255)) RETURNS BIT
as
BEGIN
	/*Verifica se o @campo sÃ³ contÃ©m nÃºmeros. 0=True 1=False */
	declare
		@MyPos 	INT	,
		@Aux 	Bit,
		@Contador As Integer

	Set @Aux = 1

	If ltrim(rtrim(isnull(@CAMPO,''))) = ''
	    Begin
		Return(@Aux)
	    End

	Select @Contador = 1 
	While @Contador <= Len(@CAMPO)
	    Begin
    		Select @Aux = 
			Case when substring(@CAMPO, @Contador, 1) in ('''', '"', '<', '>', '(', ')', ';', '+', '""', '.', ',', '*', '/', '\', '|', '-', '_', '=', '[', ']', '{', '}', '^', '~', ':', '#', '?', '!', '@', '%', 'Â¨', '&', 'Âº', 'Â°', 'Âª', 'Â¹', 'Â²', 'Â³', 'Â£', 'Â¢', 'Â¬',

 'Â§')
				Or substring(@CAMPO, @Contador, 1) In ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'X', 'Z', 'W', 'K', 'Y') then 1
		        Else 0
			End

		If @Aux = 1
			Return (@Aux)

		Select @contador = @contador + 1
	    End

	return (@Aux)
END
 
 
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_054_GRPDF_AGREGA_NFS_DCT]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_054_GRPDF_AGREGA_NFS_DCT]
 (
	@DOCTO_TRANSPORTE_ID INT
 )
	RETURNS VARCHAR(5000)  
AS  
BEGIN  

	DECLARE
		@NFS VARCHAR(5000),
		@TAB_TIPO_DOCTO_TRANSP_ID INT

	SELECT @TAB_TIPO_DOCTO_TRANSP_ID = TAB_TIPO_DOCTO_TRANSP_ID FROM DOCTO_TRANSPORTE WHERE DOCTO_TRANSPORTE_ID = @DOCTO_TRANSPORTE_ID

	SET @NFS = ''
  
	IF ISNULL(@TAB_TIPO_DOCTO_TRANSP_ID,0) = 115
	 BEGIN

		SELECT 
			@NFS = @NFS + ISNULL(NOTA_FISCAL.NOTA_FISCAL,'') + '-' + ISNULL(NOTA_FISCAL.SERIE,'') +'/'
		FROM 
			NOTA_FISCAL
			INNER JOIN DOCTO_TRANSP_AWB ON NOTA_FISCAL.DOCTO_TRANSPORTE_ID = DOCTO_TRANSP_AWB.DOCTO_TRANSPORTE_ID
		WHERE 
			DOCTO_TRANSP_AWB.DOCTO_TRANSPORTE_AWB_ID = @DOCTO_TRANSPORTE_ID
			AND NOTA_FISCAL.TAB_STATUS_ID = 1
			AND DOCTO_TRANSP_AWB.TAB_STATUS_ID = 1

	 END
	ELSE
	 BEGIN

		SELECT 
			@NFS = @NFS + ISNULL(NOTA_FISCAL,'') + '-' + ISNULL(SERIE,'') +'/'
		FROM 
			NOTA_FISCAL  
		WHERE 
			DOCTO_TRANSPORTE_ID = @DOCTO_TRANSPORTE_ID
			AND NOTA_FISCAL.TAB_STATUS_ID = 1

	END

	IF ISNULL(@NFS,'') <> ''
	 BEGIN
		RETURN SUBSTRING(@NFS,1,LEN(@NFS)-1)
	 END
	
	RETURN(@NFS)
	   
END  
  

GO

/****** Object:  UserDefinedFunction [dbo].[FN_040_NULL]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_040_NULL]
    (   @tipo					varchar(10) ,   /* t=texto, n=numerico ou int, d=data */
        @CONTEUDO				VARCHAR(500) 
    )
    RETURNS VARCHAR(8000)
AS
BEGIN
declare
	@CONTEUDO_FORMATADO varchar(500)

	if @CONTEUDO is null
		set @CONTEUDO_FORMATADO = 'NULL'
	else
		if @tipo in ( 'T', 'D' )
			set @CONTEUDO_FORMATADO = '''' + @CONTEUDO + ''''
		else
			set @CONTEUDO_FORMATADO =  @CONTEUDO

    RETURN(@CONTEUDO_FORMATADO)
END
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[Fn_045_Con_Ultima_Resumo_Ciclo]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


Create Function [dbo].[Fn_045_Con_Ultima_Resumo_Ciclo]
                (
                        @Veiculo_Fornecedor_Id        Int,
                        @Flag_Em_Viagem               Char(1)
                ) Returns Int
As
Begin

Declare @Resumo_Ciclo_Id   Int

        Select 	
                @Resumo_Ciclo_Id = Max(Resumo_Ciclo_Id)
	From 	Resumo_Ciclo
	Where 	Veiculo_Fornecedor_Id	 = @Veiculo_Fornecedor_Id
	And	(Tab_Status_id		 = 1 Or Tab_Status_id	 Is Null)

    If @Flag_Em_Viagem = 'S'
       Begin

            /* Caso a viagem tenha sido finalizada */
            If Exists(Select 1 From Resumo_Ciclo 
                               Where Resumo_Ciclo_Id = @Resumo_Ciclo_Id
                                 And Data_Fim_Viagem Is Not Null
               )
               Begin

                  Set @Resumo_Ciclo_Id = Null

               End

       End



    Return(@Resumo_Ciclo_Id)

End

 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_036_RETIRAR_CARACTER_ESPECIAL]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_036_RETIRAR_CARACTER_ESPECIAL]
(
    @P_V_TEXTO      AS VARCHAR(8000),
    @P_V_EXCECAO    AS VARCHAR(8000) = NULL
)
RETURNS VARCHAR(8000)
AS

BEGIN

    DECLARE
        @I_INDICE               AS INT,
        @I_INDICE_EXCECAO       AS INT

    DECLARE
        @V_RETORNO              AS VARCHAR(8000),
        @V_CARACTER             AS VARCHAR(01),
        @V_CARACTER_EXCECAO     AS VARCHAR(01)

    DECLARE
        @T_TEXTO_QUEBRADO AS TABLE
        (
            caracter        VARCHAR(01) NULL,
            codigo_ascii    INT NULL
        )

    DECLARE
        @T_TEXTO_EXCECAO AS TABLE
        (
            caracter        VARCHAR(01) NULL,
            codigo_ascii    INT NULL
        )

/*========================================================================================================================*/

    SET @V_RETORNO = SPACE(0)
    SET @V_CARACTER = SPACE(0)
    SET @V_CARACTER_EXCECAO = SPACE(0)
    
    SET @I_INDICE = 1
    
    IF @P_V_TEXTO IS NOT NULL
        BEGIN
            WHILE(@I_INDICE <= LEN(@P_V_TEXTO))
                BEGIN
                    SET @V_CARACTER = SUBSTRING(@P_V_TEXTO, @I_INDICE, 1)
                    
                    INSERT INTO @T_TEXTO_QUEBRADO
                    VALUES
                    (
                        @V_CARACTER, 
                        ASCII(@V_CARACTER)
                    )
                    
                    SET @I_INDICE = @I_INDICE + 1
                END

            IF @P_V_EXCECAO IS NOT NULL
                BEGIN
                
                    SET @I_INDICE_EXCECAO = 1
                    
                    IF LEN(@P_V_EXCECAO) = 0
                        BEGIN
                            SET @V_CARACTER_EXCECAO = SPACE(1)
                            
                            INSERT INTO @T_TEXTO_EXCECAO
                            VALUES
                            (
                                @V_CARACTER_EXCECAO, 
                                ASCII(@V_CARACTER_EXCECAO)
                            )
                        END
                    ELSE
                        BEGIN
                            WHILE(@I_INDICE_EXCECAO <= LEN(@P_V_EXCECAO))
                                BEGIN
                                    SET @V_CARACTER_EXCECAO = SUBSTRING(@P_V_EXCECAO, @I_INDICE_EXCECAO, 1)
                                    
                                    INSERT INTO @T_TEXTO_EXCECAO
                                    VALUES
                                    (
                                        @V_CARACTER_EXCECAO, 
                                        ASCII(@V_CARACTER_EXCECAO)
                                    )
                                    
                                    SET @I_INDICE_EXCECAO = @I_INDICE_EXCECAO + 1
                                END
                        END
                END
                
            /* MANTEM APENAS OS CARACTER a-z, A-Z, 0-9 E OS ESPECIFICADOS NO PARAMETRO DE EXCECAO */
            DELETE @T_TEXTO_QUEBRADO
            WHERE codigo_ascii NOT BETWEEN 48 AND 57
            AND codigo_ascii NOT BETWEEN 65 AND 90
            AND codigo_ascii NOT BETWEEN 97 AND 122
            AND codigo_ascii NOT IN(SELECT codigo_ascii FROM @T_TEXTO_EXCECAO)
            
            SET @V_CARACTER = SPACE(0)
            
            /* JUNTA OS CARACTERES DEPOIS DE RETIRAR OS CARACTERES ESPECIAIS */
            DECLARE C_TEXTO CURSOR LOCAL FAST_FORWARD FOR
                SELECT
                    caracter
                FROM @T_TEXTO_QUEBRADO
                
            OPEN C_TEXTO
            
            FETCH NEXT FROM C_TEXTO
                INTO @V_CARACTER
            
            WHILE(@@FETCH_STATUS = 0)
                BEGIN
                    SET @V_RETORNO = @V_RETORNO + @V_CARACTER 

                    FETCH NEXT FROM C_TEXTO
                        INTO @V_CARACTER
                END
            
            CLOSE C_TEXTO
            DEALLOCATE C_TEXTO
        END
    ELSE
        SET @V_RETORNO = NULL

    
    RETURN @V_RETORNO
END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_TAB_TIPO_DCT_TRANSP_SHIP]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE FUNCTION [dbo].[FN_TAB_TIPO_DCT_TRANSP_SHIP]() returns INT

AS

BEGIN

	DECLARE @TAB_TIPO_DOCTO_TRANSP_ID INT

	SELECT @TAB_TIPO_DOCTO_TRANSP_ID = ISNULL(PARAMETRO,1) FROM TAB_PARAMETRO_SISTEMA WHERE TAB_PARAMETRO_SISTEMA_ID = 6723

	RETURN(@TAB_TIPO_DOCTO_TRANSP_ID)
    
END

GO

/****** Object:  UserDefinedFunction [dbo].[fn_040_campo_sp_char]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create function [dbo].[fn_040_campo_sp_char](@campo varchar(3990)) returns varchar(4000)
as
begin
	declare	@campo_varchar	varchar(4000)

	if @campo is null or @campo = ''
	  begin
		set @campo_varchar  = 'null'
	  end
	else
		set @campo_varchar  = '''' + ltrim(rtrim(@campo)) + ''''

	RETURN(@campo_varchar)
end
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_040_campo_sp_int]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create function [dbo].[fn_040_campo_sp_int](@campo int) returns varchar(20)
as
begin
	declare	@campo_varchar	varchar(20)

	if @campo is null or @campo = 0
	  begin
		set @campo_varchar  = 'null'
	  end
	else
		set @campo_varchar  = convert(varchar,@campo)

	RETURN(@campo_varchar)
end
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_040_campo_sp_num]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create function [dbo].[fn_040_campo_sp_num](@campo numeric(15,2)) returns varchar(30)
as
begin
	declare	@campo_varchar	varchar(30)

	if @campo is null or @campo = 0
	  begin
		set @campo_varchar  = 'null'
	  end
	else
		set @campo_varchar  = convert(varchar,@campo)

	RETURN(@campo_varchar)
end
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_040_campo_sp_num_5dec]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create function [dbo].[fn_040_campo_sp_num_5dec](@campo numeric(15,5)) returns varchar(30)
as
begin
	declare	@campo_varchar	varchar(30)

	if @campo is null or @campo = 0
	  begin
		set @campo_varchar  = 'null'
	  end
	else
		set @campo_varchar  = convert(varchar,@campo)

	RETURN(@campo_varchar)
end
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_040_num_pedidos]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create function [dbo].[fn_040_num_pedidos](@docto_transporte_id int) returns varchar(255)
as
begin
	DECLARE		@num_pedido_externo             varchar(20),
				@num_pedidos					varchar(255) 
	
	select @num_pedidos = ''
    declare cursor_num_ped  cursor local static forward_only for
	  select ltrim(rtrim(isnull(ped.num_pedido_externo,'')))	
	  from pedido ped
		inner join pedido_dct ped_dct
			on ped_dct.pedido_id = ped.pedido_id
				and ped_dct.tab_status_id = 1
				and ped.tab_status_id = 1
				and ped.num_pedido_externo is not null
	  where ped_dct.docto_transporte_id = @docto_transporte_id

	open cursor_num_ped 
	fetch next from cursor_num_ped  into @num_pedido_externo
	
	while (@@fetch_status = 0)
	    begin
		if len(@num_pedidos) + len(@num_pedido_externo) < 250 
			set @num_pedidos = @num_pedidos + @num_pedido_externo + ' , '

		fetch next from cursor_num_ped  into @num_pedido_externo
	    end

	if len(@num_pedidos) > 0
		set @num_pedidos = substring(@num_pedidos,1,len(@num_pedidos) - 2 )

	close cursor_num_ped 
	deallocate cursor_num_ped 

	RETURN(@num_pedidos)
end
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_RETORNA_ID_EXT]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_ECR_RETORNA_ID_EXT](@IN_NOME_TABELA VARCHAR(32), @IN_SISTEMA_EXTERNO_ID INT, @IN_REGISTRO_ID INT)
RETURNS varchar(20)
AS

BEGIN

	DECLARE @id_sistema_externo VARCHAR(20),
			@TABELA_SISTEMA_ID INT

	SELECT @TABELA_SISTEMA_ID = TABELA_SISTEMA_ID
	FROM TABELA_SISTEMA
	WHERE LTRIM(RTRIM(NOME_TABELA)) = LTRIM(RTRIM(@IN_NOME_TABELA))

	IF ISNULL(@TABELA_SISTEMA_ID,0) = 0
		RETURN NULL

	SELECT @id_sistema_externo = id_sistema_externo
	FROM DEPARA_SISTEMA_EXTERNO
	WHERE TABELA_SISTEMA_ID = @TABELA_SISTEMA_ID
	AND SISTEMA_EXTERNO_ID = @IN_SISTEMA_EXTERNO_ID
	AND REGISTRO_ID = @IN_REGISTRO_ID

	RETURN @id_sistema_externo

END
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_037_RETIRA_ALFA]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_037_RETIRA_ALFA](@SERIE CHAR(3)) RETURNS CHAR(3) /*SELECT DBO.FN_037_RETIRA_ALFA('SE8')*/
as
BEGIN
	DECLARE
	@AX_SERIE CHAR(3),
	@AX_CONT  INT

	SET @AX_CONT = 1
	SET @AX_SERIE = ''
 

	WHILE @AX_CONT < LEN(@SERIE) + 1
	    BEGIN
		
		IF SUBSTRING(@SERIE,@AX_CONT,1) BETWEEN '0'AND '9'
		    BEGIN
			SET @AX_SERIE = RTRIM(LTRIM(ISNULL(@AX_SERIE,''))) + SUBSTRING(@SERIE,@AX_CONT,1)
		    END
	
		SET @AX_CONT = @AX_CONT + 1
	  END

	RETURN (@AX_SERIE)
END

 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_STRING_ACENTUACAO]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_STRING_ACENTUACAO]
(
    @STRING_IN VARCHAR(8000)
)
RETURNS VARCHAR(8000)
AS

BEGIN

	DECLARE @STRING_OUT VARCHAR(8000)
	
	--FUNÃÃO QUE RETIRA TODOS AS ACENTUAÃÃES E CARACTERES RETORNANDO A STRING LIMPA E SEM ESPAÃOS
	SELECT @STRING_OUT = UPPER(@STRING_IN)
	
	--2 RETIRA CARACTERES ESPECIAIS
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '''', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '<', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '>', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '(', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ')', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ';', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '%', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '&', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '+', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '"', '')
	
	--3 RETIRA ACENTUAÃÃO
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'E')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'E')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'E')	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'I')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'I')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'I')	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'U')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'U')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'U')
	
	--4 OUTROS
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'C')
	
	RETURN @STRING_OUT

END
 
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_STRING_LIMPA]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_STRING_LIMPA]
(
    @STRING_IN VARCHAR(8000)
)
RETURNS VARCHAR(8000)
AS

BEGIN

	DECLARE @STRING_OUT VARCHAR(8000)
	
	--FUNÃÃO QUE RETIRA TODOS AS ACENTUAÃÃES E CARACTERES RETORNANDO A STRING LIMPA E SEM ESPAÃOS
	SELECT @STRING_OUT = UPPER(@STRING_IN)
	
	--1 RETIRA ESPAÃOS
	--SELECT @STRING_OUT = REPLACE(@STRING_OUT, ' ', '')
	
	--2 RETIRA CARACTERES ESPECIAIS
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '''', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '<', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '>', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '(', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ')', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ';', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '%', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '&', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '+', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '"', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '\', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '/', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '-', ' ')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '*', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '!', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '@', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '$', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Â¨', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '[', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ']', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ':', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '{', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '}', '')
	
	--3 RETIRA ACENTUAÃÃO
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'A')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'E')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'E')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'E')	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'I')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'I')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'I')	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'O')	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'U')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'U')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'U')
	
	--4 OUTROS
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, 'Ã', 'C')
	
	RETURN @STRING_OUT

END
 
 
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_STRING_CASPETA]    Script Date: 21/07/2015 16:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_STRING_CASPETA]
(
    @STRING_IN VARCHAR(8000)
)
RETURNS VARCHAR(8000)
AS

BEGIN

	DECLARE @STRING_OUT VARCHAR(8000)
	
	SELECT @STRING_OUT = UPPER(@STRING_IN)
	
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '''', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '<', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '>', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '(', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ')', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, ';', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '%', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '&', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '+', '')
	SELECT @STRING_OUT = REPLACE(@STRING_OUT, '"', '')
	
	RETURN UPPER(@STRING_OUT)

END
 
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_CGS_EDITA_CAMPO02]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_CGS_EDITA_CAMPO02](@VALOR		NUMERIC(15,2),@VAL_DEFAULT VARCHAR(30)) RETURNS VARCHAR(30)
as
BEGIN
declare
	@VAL_AUX_CHAR		VARCHAR(30),
	@VAL_AUX		NUMERIC(17),
	@VAL_DECIMAL		VARCHAR(2),
	@VAL_CENTENA		VARCHAR(3),
	@VAL_MILHAR		VARCHAR(3),
	@VAL_MILHAO		VARCHAR(3),
	@VAL_RESTO		VARCHAR(200),
	@TAMANHO		INT,
	@pos_inicio		int,
	@VAL_EDT		varchar(30)


	if @VALOR = 0 OR @VALOR =NULL
	  begin
		select @VAL_EDT = @VAL_DEFAULT
		RETURN(@VAL_EDT)
	  end

	select @VAL_AUX =@VALOR * 100
	select @VAL_AUX_CHAR = CONVERT(VARCHAR(20),@VAL_AUX)
	SELECT @POS_INICIO = LEN(@VAL_AUX_CHAR)

	SELECT @pos_inicio = LEN(@VAL_AUX_CHAR)
	select @pos_inicio = @pos_inicio - 1

	SELECT @VAL_DECIMAL = SUBSTRING(@VAL_AUX_CHAR,@pos_inicio,2)
	if LEN(@VAL_AUX_CHAR) > 2
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO

		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end

		select @VAL_CENTENA = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  

	  END
	else
	  BEGIN
		select @VAL_CENTENA = '0'
	  END

	if LEN(@VAL_AUX_CHAR) > 5
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO
		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end
		select @VAL_MILHAR = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
		select @VAL_MILHAR = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_MILHAR = ' '
	  END


	/*milhÃ£o*/
	if LEN(@VAL_AUX_CHAR) > 8
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO
		
		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end
		select @VAL_MILHAO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
		select @VAL_MILHAO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_MILHAO = ' '
	  END

	SELECT @VAL_EDT = RTRIM(@VAL_CENTENA) + ',' + @VAL_DECIMAL

	if @VAL_MILHAR > ' '
	  begin
		IF RTRIM(LTRIM(@VAL_MILHAR)) <> '-'
			BEGIN
				SELECT @VAL_EDT = RTRIM(@VAL_MILHAR)+ '.' + @VAL_EDT
			END
		ELSE
			BEGIN
				SELECT @VAL_EDT = RTRIM(@VAL_MILHAR) + @VAL_EDT
			END
	  END
	IF @VAL_MILHAO > ' '
	  begin
		IF RTRIM(LTRIM(@VAL_MILHAO)) <> '-'
			BEGIN
				SELECT @VAL_EDT = RTRIM(@VAL_MILHAO)+ '.' + @VAL_EDT
			END
		ELSE
			BEGIN
				SELECT @VAL_EDT = RTRIM(@VAL_MILHAO) + @VAL_EDT
			END
	  END
	

	if LEN(@VAL_AUX_CHAR) > 11
	  begin
		SELECT @TAMANHO = 2
		select @pos_inicio = @pos_inicio - 1
		select @VAL_RESTO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_RESTO = ' '
	  END


	RETURN(@VAL_EDT)
END 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_047_TRATA_IE]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create Function [dbo].[FN_047_TRATA_IE] (@pj_inscr_estadual Varchar(15)) Returns Varchar(15)
As
Begin

	Declare @PJ_IE Varchar(14)

	If Upper(@pj_inscr_estadual) = 'ISENTO' Or Upper(@pj_inscr_estadual) = 'ISENTA'
	    Begin
		Select	@PJ_IE = 'ISENTO'
	    End
	Else
	    Begin
		Select	@PJ_IE = @pj_inscr_estadual
	    End

	Return	@PJ_IE
End

 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_ALFA]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_ALFA]
    (
        @FORMATO_TIPO_CAMPO_ID INT, 
        @TAMANHO_CAMPO         INT, 
        @SEPARADOR             VARCHAR(2), 
        @CONTEUDO              VARCHAR(8000) 
    )
    RETURNS VARCHAR(8000)
AS

BEGIN
        
    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000)
        
/*====================================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''
    SET @CONTEUDO = ISNULL(@CONTEUDO, '')

/*====================================================================================================================*/

    IF @TAMANHO_CAMPO > 0
        BEGIN
            IF LEN(@CONTEUDO) > @TAMANHO_CAMPO
                SET @CONTEUDO_FORMATADO = SUBSTRING(@CONTEUDO, 1, @TAMANHO_CAMPO)
            ELSE
                SET @CONTEUDO_FORMATADO = @CONTEUDO + SPACE(@TAMANHO_CAMPO - LEN(@CONTEUDO))

            SET @CONTEUDO_FORMATADO = @SEPARADOR + @CONTEUDO_FORMATADO + @SEPARADOR
        END
    ELSE
        SET @CONTEUDO_FORMATADO = ''

    RETURN(@CONTEUDO_FORMATADO)
END
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_DATA]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_DATA]
    (
        @FORMATO_TIPO_CAMPO_ID INT, 
        @TAMANHO_CAMPO         INT, 
        @CONTEUDO              DATETIME
    )
    RETURNS VARCHAR(8000)
AS

BEGIN
        
    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000),
        @FORMATO_DATA       VARCHAR(10),
        @DIA                VARCHAR(2),
        @MES                VARCHAR(2),
        @ANO                VARCHAR(4)
        
/*====================================================================================================================*/

    /* TRATAMENTO DO CONTEUDO DOS PARAMETROS RECEBIDOS */
    SET @FORMATO_TIPO_CAMPO_ID = ISNULL(@FORMATO_TIPO_CAMPO_ID, 3)
    SET @CONTEUDO = ISNULL(@CONTEUDO, '')

/*====================================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''

    SELECT 
        @FORMATO_DATA = formato_tipo_campo
    FROM formato_tipo_campo
    WHERE formato_tipo_campo_id = @FORMATO_TIPO_CAMPO_ID
    AND tab_status_id = 1

    IF ISDATE(@CONTEUDO) = 1
        BEGIN
            SET @DIA = DAY(@CONTEUDO)
            SET @DIA = REPLICATE('0', 2 - LEN(@DIA)) + @DIA

            SET @MES = MONTH(@CONTEUDO)
            SET @MES = REPLICATE('0', 2 - LEN(@MES)) + @MES

            SET @ANO = YEAR(@CONTEUDO)
            
            SET @CONTEUDO_FORMATADO = @FORMATO_DATA
            SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'DD', @DIA)

            SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'MM', @MES)

            IF CHARINDEX('AAAA', @FORMATO_DATA, 1) > 0
                SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'AAAA', @ANO)
            ELSE
                SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'AA', RIGHT(@ANO, 2))
        END
    ELSE
        BEGIN
            SET @CONTEUDO_FORMATADO = REPLICATE('0', SPACE(LEN(@FORMATO_DATA)))
        END

    RETURN(@CONTEUDO_FORMATADO)
END
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_HORA]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_HORA]
    (
        @FORMATO_TIPO_CAMPO_ID INT, 
        @TAMANHO_CAMPO         INT, 
        @CONTEUDO              DATETIME
    )
    RETURNS VARCHAR(8000)
AS

BEGIN
        
    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000),
        @FORMATO_HORA       VARCHAR(10),
        @HORA               VARCHAR(2),
        @MINUTO             VARCHAR(2),
        @SEGUNDO            VARCHAR(2)
        
/*====================================================================================================================*/

    /* TRATAMENTO DO CONTEUDO DOS PARAMETROS RECEBIDOS */
    SET @FORMATO_TIPO_CAMPO_ID = ISNULL(@FORMATO_TIPO_CAMPO_ID, 28)
    SET @CONTEUDO = ISNULL(@CONTEUDO, '')

/*====================================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''

    SELECT 
        @FORMATO_HORA = formato_tipo_campo
    FROM formato_tipo_campo
    WHERE formato_tipo_campo_id = @FORMATO_TIPO_CAMPO_ID
    AND tab_status_id = 1

    IF ISDATE(@CONTEUDO) = 1
        BEGIN
            SET @HORA = DATEPART(HOUR, @CONTEUDO)
            SET @HORA = REPLICATE('0', 2 - LEN(@HORA)) + @HORA
            SET @HORA = ISNULL(@HORA, '')

            SET @MINUTO = DATEPART(MINUTE, @CONTEUDO)
            SET @MINUTO = REPLICATE('0', 2 - LEN(@MINUTO)) + @MINUTO
            SET @MINUTO = ISNULL(@MINUTO, '')

            SET @SEGUNDO = DATEPART(SECOND, @CONTEUDO)
            SET @SEGUNDO = REPLICATE('0', 2 - LEN(@SEGUNDO)) + @SEGUNDO
            SET @SEGUNDO = ISNULL(@SEGUNDO, '')
            
            SET @CONTEUDO_FORMATADO = @FORMATO_HORA
            SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'HH', @HORA)
            SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'MM', @MINUTO)
            SET @CONTEUDO_FORMATADO = REPLACE(@CONTEUDO_FORMATADO, 'SS', @SEGUNDO)
        END
    ELSE
        BEGIN
            SET @CONTEUDO_FORMATADO = REPLICATE('0', SPACE(LEN(@FORMATO_HORA)))
        END

    RETURN(@CONTEUDO_FORMATADO)
END
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_NUMERO]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_NUMERO]
    (
        @FORMATO_TIPO_CAMPO_ID INT, 
        @TAMANHO_CAMPO         INT, 
        @QTDE_DECIMAIS         INT, 
        @CONTEUDO              VARCHAR(8000) 
    )
    RETURNS VARCHAR(8000)
AS

BEGIN

/*============================================================================================================
FORMATOS TRATADOS
==============================================================================================================

FORMATO_TIPO_CAMPO_ID    FORMATACAO
---------------------    -------------
48	                     Inteiro
49	                     Sem Separador      

=============================================================================================================*/

    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000)

    DECLARE
        @ERROR_NUMBER INT
        
/*===========================================================================================================*/

    /* TRATAMENTO DO CONTEUDO DOS PARAMETROS RECEBIDOS */
    SET @FORMATO_TIPO_CAMPO_ID = ISNULL(@FORMATO_TIPO_CAMPO_ID, 48)

    SET @QTDE_DECIMAIS = ISNULL(@QTDE_DECIMAIS, 0)
    
    IF @QTDE_DECIMAIS < 0
        SET @QTDE_DECIMAIS = 0

    SET @CONTEUDO = ISNULL(@CONTEUDO, '0')

/*============================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''

    IF ISNUMERIC(@CONTEUDO) = 1
        BEGIN
            SET @CONTEUDO = CAST((CAST(@CONTEUDO AS NUMERIC(15,6)) * POWER(10, @QTDE_DECIMAIS)) AS NUMERIC(15))
/*
            BEGIN TRY
                SET @CONTEUDO = CAST((CAST(@CONTEUDO AS NUMERIC(15,6)) * POWER(10, @QTDE_DECIMAIS)) AS NUMERIC(15))
            END TRY
            BEGIN CATCH
                    /* ARITHMETIC OVERFLOW ERROR CONVERTING NUMERIC TO DATA TYPE NUMERIC. */
                    SELECT 
                        @ERROR_NUMBER = ERROR_NUMBER() 
/*
                    IF @ERROR_NUMBER = 8115
                        SET @CONTEUDO = ISNULL(SET @CONTEUDO, '0')
*/
            END CATCH
*/
            IF @FORMATO_TIPO_CAMPO_ID IN(48,49)
                BEGIN
                    IF LEN(@CONTEUDO) > @TAMANHO_CAMPO
                        SET @CONTEUDO_FORMATADO = SUBSTRING(@CONTEUDO, 1, @TAMANHO_CAMPO)
                    ELSE
                        SET @CONTEUDO_FORMATADO = REPLICATE('0', @TAMANHO_CAMPO - LEN(@CONTEUDO)) + @CONTEUDO
                END
        END
    ELSE
        BEGIN
            IF @TAMANHO_CAMPO > 0
                SET @CONTEUDO_FORMATADO = REPLICATE('0', @TAMANHO_CAMPO - LEN(@CONTEUDO)) + @CONTEUDO
            ELSE
                SET @CONTEUDO_FORMATADO = REPLICATE('0', @TAMANHO_CAMPO)
        END

    RETURN(@CONTEUDO_FORMATADO)
END
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_CGS_EDITA_CAMPO]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[FN_CGS_EDITA_CAMPO](@VALOR		NUMERIC(15,2),@VAL_DEFAULT VARCHAR(30)) RETURNS VARCHAR(30)
as
BEGIN
declare
	@VAL_AUX_CHAR		VARCHAR(30),
	@VAL_AUX		NUMERIC(17),
	@VAL_DECIMAL		VARCHAR(2),
	@VAL_CENTENA		VARCHAR(3),
	@VAL_MILHAR		VARCHAR(3),
	@VAL_MILHAO		VARCHAR(3),
	@VAL_RESTO		VARCHAR(200),
	@TAMANHO		INT,
	@pos_inicio		int,
	@VAL_EDT		varchar(30)


	if @VALOR = 0 OR @VALOR =NULL
	  begin
		select @VAL_EDT = @VAL_DEFAULT
		RETURN(@VAL_EDT)
	  end

	select @VAL_AUX =@VALOR * 100
	select @VAL_AUX_CHAR = CONVERT(VARCHAR(20),@VAL_AUX)
	SELECT @POS_INICIO = LEN(@VAL_AUX_CHAR)

	SELECT @pos_inicio = LEN(@VAL_AUX_CHAR)
	select @pos_inicio = @pos_inicio - 1

	SELECT @VAL_DECIMAL = SUBSTRING(@VAL_AUX_CHAR,@pos_inicio,2)
	if LEN(@VAL_AUX_CHAR) > 2
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO

		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end

		select @VAL_CENTENA = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  

	  END
	else
	  BEGIN
		select @VAL_CENTENA = '0'
	  END

	if LEN(@VAL_AUX_CHAR) > 5
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO
		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end
		select @VAL_MILHAR = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
		select @VAL_MILHAR = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_MILHAR = '.'
	  END


	/*milhÃ£o*/
	if LEN(@VAL_AUX_CHAR) > 8
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO
		
		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end
		select @VAL_MILHAO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
		select @VAL_MILHAO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_MILHAO = ' '
	  END

	SELECT @VAL_EDT = RTRIM(@VAL_CENTENA) + ',' + @VAL_DECIMAL

	if @VAL_MILHAR > ' ' 
	  begin
		SELECT @VAL_EDT = RTRIM(@VAL_MILHAR)+ '.' + @VAL_EDT
	  END
	IF @VAL_MILHAO > ' '
	  begin
		SELECT @VAL_EDT = RTRIM(@VAL_MILHAO)+ '.' + @VAL_EDT
	  END
	

	if LEN(@VAL_AUX_CHAR) > 11
	  begin
		SELECT @TAMANHO = 2
		select @pos_inicio = @pos_inicio - 1
		select @VAL_RESTO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_RESTO = ' '
	  END


	RETURN(@VAL_EDT)
END

 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_CEP]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_CEP]
    (
        @TAMANHO_CAMPO         INT, 
	@DIGITO		       CHAR(1),
        @CONTEUDO              VARCHAR(8000) 
    )
    RETURNS VARCHAR(8000)
AS

BEGIN
        
    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000)
        
/*====================================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''
    SET @CONTEUDO = ISNULL(@CONTEUDO, '')

/*====================================================================================================================*/

    IF @TAMANHO_CAMPO > 0 AND LEN(@CONTEUDO) > 0
        BEGIN
		SET @CONTEUDO = LTRIM(RTRIM(@CONTEUDO))
		SET @CONTEUDO = REPLACE(REPLACE(REPLACE(@CONTEUDO,'-',''),'.',''),' ','')
		SET @CONTEUDO_FORMATADO = SUBSTRING(@CONTEUDO,1,5) + @DIGITO + SUBSTRING(@CONTEUDO,6,4)
        END
    ELSE
        SET @CONTEUDO_FORMATADO = ''

    RETURN(@CONTEUDO_FORMATADO)
END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_CNPJ_CPF]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO



CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_CNPJ_CPF]
    (
        @FORMATO_TIPO_CAMPO_ID INT, 
        @TAMANHO_CAMPO         INT, 
        @CONTEUDO              VARCHAR(8000) 
    )
    RETURNS VARCHAR(8000)
AS

BEGIN

/*============================================================================================================
FORMATOS TRATADOS
==============================================================================================================

FORMATO_TIPO_CAMPO_ID TIPO_CAMPO_REGISTRO_ID formato_tipo_campo 
--------------------- ---------------------- -------------------
34                    CNPJ                   Sem Formatacao 
35                    CNPJ                   Com Formatacao 
36                    CNPJ                   So Radical     
37                    CNPJ                   So Filial      
38                    CNPJ                   So Digitos     

39                    CPF                    Sem Formatacao 
40                    CPF                    Com Formatacao 
41                    CPF                    So Radical     
42                    CPF                    So Digitos     
       
=============================================================================================================*/

    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000),
        @RADICAL            VARCHAR(10),
        @FILIAL             VARCHAR(10),
        @DIGITO             VARCHAR(10)
        
/*====================================================================================================================*/

    /* TRATAMENTO DO CONTEUDO DOS PARAMETROS RECEBIDOS */
    SET @CONTEUDO = ISNULL(@CONTEUDO, '')
    SET @FORMATO_TIPO_CAMPO_ID = ISNULL(@FORMATO_TIPO_CAMPO_ID, 34) 

/*============================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''
    SET @RADICAL = ''
    SET @FILIAL = ''
    SET @DIGITO = ''

    IF LEN(@CONTEUDO) > 0
        BEGIN
            SET @CONTEUDO = REPLACE(@CONTEUDO, '.', '')
            SET @CONTEUDO = REPLACE(@CONTEUDO, '/', '')
            SET @CONTEUDO = REPLACE(@CONTEUDO, '-', '')
            SET @CONTEUDO = REPLACE(@CONTEUDO, SPACE(1), '')
        END

    IF @TAMANHO_CAMPO > 0
        BEGIN
            IF LEN(@CONTEUDO) > @TAMANHO_CAMPO
                SET @CONTEUDO = SUBSTRING(@CONTEUDO, 1, @TAMANHO_CAMPO)
            ELSE
                SET @CONTEUDO = REPLICATE('0', @TAMANHO_CAMPO - LEN(@CONTEUDO)) + @CONTEUDO

            IF LEN(@CONTEUDO) > 11
                BEGIN
                    SET @RADICAL = SUBSTRING(@CONTEUDO, 1, 8)
                    SET @FILIAL = SUBSTRING(@CONTEUDO, 9, 4)
                    SET @DIGITO = RIGHT(@CONTEUDO, 2)
                END
            ELSE
                BEGIN
                    SET @RADICAL = SUBSTRING(@CONTEUDO, 1, 9)
                    SET @FILIAL = ''
                    SET @DIGITO = RIGHT(@CONTEUDO, 2)
                END

            IF @FORMATO_TIPO_CAMPO_ID IN(34,39)
                SET @CONTEUDO_FORMATADO = @CONTEUDO

            IF @FORMATO_TIPO_CAMPO_ID IN(35,40)
                BEGIN
                    IF LEN(@RADICAL) = 8
                        SET @CONTEUDO_FORMATADO = LEFT(@RADICAL, 2) + '.' + SUBSTRING(@RADICAL, 3, 3) + '.' + RIGHT(@RADICAL, 3) + '/' + @FILIAL + '-' + @DIGITO
                    ELSE
                        SET @CONTEUDO_FORMATADO = LEFT(@RADICAL, 3) + '.' + SUBSTRING(@RADICAL, 4, 3) + '.' + RIGHT(@RADICAL, 3) + '-' + @DIGITO
                END

            IF @FORMATO_TIPO_CAMPO_ID IN(36,41)
                BEGIN
                    --SET @RADICAL = SUBSTRING(@CONTEUDO, 1, 9)
                    SET @FILIAL = REPLICATE('0', LEN(@FILIAL))
                    SET @DIGITO = REPLICATE('0', LEN(@DIGITO))
                    SET @CONTEUDO_FORMATADO = @RADICAL + @FILIAL + @DIGITO
                END

            IF @FORMATO_TIPO_CAMPO_ID = 37
                BEGIN
                    SET @RADICAL = REPLICATE('0', LEN(@RADICAL))
                    --SET @FILIAL = REPLICATE('0', LEN(@FILIAL))
                    SET @DIGITO = REPLICATE('0', LEN(@DIGITO))
                    SET @CONTEUDO_FORMATADO = @RADICAL + @FILIAL + @DIGITO
                END

            IF @FORMATO_TIPO_CAMPO_ID IN(38,42)
                BEGIN
                    SET @RADICAL = REPLICATE('0', LEN(@RADICAL))
                    SET @FILIAL = REPLICATE('0', LEN(@FILIAL))
                    --SET @CONTEUDO_FORMATADO = @DIGITO
                    SET @CONTEUDO_FORMATADO = @RADICAL + @FILIAL + @DIGITO
                END
        END
    ELSE
        SET @CONTEUDO_FORMATADO = ''

    RETURN(@CONTEUDO_FORMATADO)
END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_FORMATA_TXT_FONE]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_ECR_FORMATA_TXT_FONE]
    (
        @TAMANHO_CAMPO         INT, 
	@DIGITO		       CHAR(1),
        @CONTEUDO              VARCHAR(8000) 
    )
    RETURNS VARCHAR(8000)
AS

BEGIN
        
    DECLARE
        @CONTEUDO_FORMATADO VARCHAR(8000)
        
/*====================================================================================================================*/

    SET @CONTEUDO_FORMATADO = ''
    SET @CONTEUDO = ISNULL(@CONTEUDO, '')

/*====================================================================================================================*/

    IF @TAMANHO_CAMPO > 0 AND LEN(@CONTEUDO) > 0
        BEGIN
		SET @CONTEUDO = LTRIM(RTRIM(@CONTEUDO))
		SET @CONTEUDO = REPLACE(REPLACE(REPLACE(@CONTEUDO,'-',''),'.',''),' ','')
		SET @CONTEUDO_FORMATADO = SUBSTRING(@CONTEUDO,1,4) + @DIGITO + SUBSTRING(@CONTEUDO,5,5)
        END
    ELSE
        SET @CONTEUDO_FORMATADO = ''

    RETURN(@CONTEUDO_FORMATADO)
END
 

GO

/****** Object:  UserDefinedFunction [dbo].[fn_IPDF_FormatValMilDec]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO

create  FUNCTION [dbo].[fn_IPDF_FormatValMilDec](@Valor_Aux Decimal(18,4))
	Returns  Varchar(50) AS

Begin
	Declare
			@Inteiro			int,
			@Texto				varchar(50),
			@ValorDecimal		varchar(2),
			@Valor				Numeric(15,2),
			@SepMilhar			char(1),
			@SepDecimal			Char(1)

	Select @SepMilhar = '.'
	Select @SepDecimal = ','

	Select @Valor = Isnull(@Valor_Aux,0)

	Set @Texto = RTrim(Cast(@Valor as varchar(50)))
	Set @Inteiro = Cast(@Valor as Integer)
	Set @ValorDecimal = SubString(@Texto,Len(@Texto)-1,2)

	If Len(@Inteiro) = 1
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,1) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 2
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,2) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 3
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 4
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,1) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),2,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 5
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,2) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),3,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 6
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),4,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 7
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,1) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),2,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),5,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 8
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,2) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),3,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),6,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 9
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),4,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),7,3) + @SepDecimal + @ValorDecimal

	If Len(@Inteiro) = 10
		Set @Texto = SubString(Cast(@Inteiro as varchar(10)),1,1) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),2,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),5,3) + @SepMilhar +  SubString(Cast(@Inteiro as varchar(10)),8,3) + @SepDecimal + @ValorDecimal

	Return @Texto

End
	

GO

/****** Object:  UserDefinedFunction [dbo].[FN_CGS_EDITA_CAMPO_6DECIMAL]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_CGS_EDITA_CAMPO_6DECIMAL](@VALOR	NUMERIC(15,6), @VAL_DEFAULT    VARCHAR(24), @Qtde_Casas int) RETURNS varchar(30)
as 
BEGIN
declare
	@VAL_EDT	VARCHAR(24) ,
	@VAL_AUX_CHAR		VARCHAR(21),
	@VAL_AUX		NUMERIC(17),
	@VAL_DECIMAL		VARCHAR(6),
	@VAL_CENTENA		VARCHAR(3),
	@VAL_MILHAR		VARCHAR(3),
	@VAL_MILHAO		VARCHAR(3),
	@VAL_RESTO		VARCHAR(10),
	@TAMANHO		INT,
	@pos_inicio		int


	if @VALOR = 0 OR @VALOR =NULL
	  begin
		select @VAL_EDT = @VAL_DEFAULT
		RETURN(@VAL_EDT)
	  end


	select @VAL_AUX =@VALOR * 1000000
	select @VAL_AUX_CHAR = CONVERT(VARCHAR(21),@VAL_AUX)

	SELECT @POS_INICIO = LEN(@VAL_AUX_CHAR)

	SELECT @pos_inicio = LEN(@VAL_AUX_CHAR)
	select @pos_inicio = @pos_inicio - 5


	SELECT @VAL_DECIMAL = SUBSTRING(@VAL_AUX_CHAR,@pos_inicio,6)
	if @VAL_DECIMAL = '' or @VAL_DECIMAL = null
	  begin
		select @VAL_DECIMAL = '000000'
	  end
	if LEN(@VAL_AUX_CHAR) > 6
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO

		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end

		select @VAL_CENTENA = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  

	  END
	else
	  BEGIN
		select @VAL_CENTENA = "0"
	  END

	if LEN(@VAL_AUX_CHAR) > 9
	  begin
		SELECT @TAMANHO = 3
		select @pos_inicio = @pos_inicio - @TAMANHO
		if @pos_inicio <= 0
		  begin
			SELECT @TAMANHO = @TAMANHO + @POS_INICIO - 1
			SELECT @POS_INICIO =1	
		  end
		select @VAL_MILHAR = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
		select @VAL_MILHAR = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_MILHAR = " "
	  END

	if LEN(@VAL_AUX_CHAR) > 12
	  begin
		SELECT @TAMANHO = 2
		select @pos_inicio = @pos_inicio - 1
		select @VAL_RESTO = SUBSTRING(@VAL_AUX_CHAR,@POS_INICIO,@TAMANHO)  
	  END
	else
	  BEGIN
		select @VAL_RESTO = " "
	  END

	SELECT @VAL_EDT = RTRIM(@VAL_CENTENA) + "," + @VAL_DECIMAL

	if @VAL_MILHAR > " " 
	  begin
		SELECT @VAL_EDT = RTRIM(@VAL_MILHAR)+ "." + @VAL_EDT
	  END

	RETURN(@VAL_EDT)
/*
	if @VAL_RESTO > " " 
	  begin
		SELECT @VAL_EDT = RTRIM(@VAL_RESTO) + @VAL_EDT
	  END
*/
END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_LISTA_NOTA_SEM_ENTREGA]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create Function [dbo].[FN_ECR_LISTA_NOTA_SEM_ENTREGA](@Docto_Transporte_ID Int) Returns Varchar(512)
As
Begin

	Declare
	@Nota_Fiscal_ID			Int,
	@Nota_Fiscal			Varchar(15),
	@Qtde				Int,
	@Lista_Notas			Varchar(512)

	Set @Lista_Notas = ''

	Declare Cursor_NF_Ocorrencia_Entregue Cursor LOCAL FORWARD_ONLY FAST_FORWARD READ_ONLY For
		Select	NF.Nota_Fiscal_ID,
			NF.Nota_Fiscal
		From	Docto_Transporte		As DT
			Inner Join Nota_Fiscal		As NF	On NF.Docto_Transporte_ID = DT.Docto_Transporte_ID
		Where	DT.Docto_Transporte_ID = @Docto_Transporte_ID
			And NF.Tab_Status_ID != 2
		Order By
			NF.Nota_Fiscal
	Open Cursor_NF_Ocorrencia_Entregue
	Fetch Next From Cursor_NF_Ocorrencia_Entregue Into @Nota_Fiscal_ID, @Nota_Fiscal

	While (@@Fetch_Status = 0)
	    Begin

		Select	@Qtde = Count(Tra.Nota_Fiscal_ID)
		From	Nota_Fiscal			As NF	
			Inner Join Tracking		As Tra	On NF.Nota_Fiscal_ID = Tra.Nota_Fiscal_ID
			Inner Join Tab_Tipo_Tracking	As TTT	On Tra.Tab_Tipo_Tracking_ID = TTT.Tab_Tipo_Tracking_ID
		Where	Tra.Tab_Status_ID = 1
			And NF.Tab_Status_ID != 2
			And Tra.Nota_Fiscal_ID = @Nota_Fiscal_ID
			And Tra.Docto_Transporte_ID Is Null
			And TTT.Indic_Entrega != 'S'

		If IsNull(@Qtde, 0) >= 0
		    Begin
			Set @Lista_Notas = @Lista_Notas + @Nota_Fiscal + ', '
		    End

		Fetch Next From Cursor_NF_Ocorrencia_Entregue Into @Nota_Fiscal_ID, @Nota_Fiscal
	    End

	Close Cursor_NF_Ocorrencia_Entregue
	Deallocate Cursor_NF_Ocorrencia_Entregue

	Set @Lista_Notas = SubString(@Lista_Notas, 1, Len(@Lista_Notas) - 1)

	Return (@Lista_Notas)

End

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_OBTER_CNPJ_PONTO]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create Function [dbo].[FN_ECR_OBTER_CNPJ_PONTO] (@Ponto_Operacao_ID Int) Returns Varchar(14)
As
Begin

	Declare @Aux	Varchar(14)
	Declare @CNPJPO	Varchar(14)
	Declare @CNPJPA	Varchar(14)
	Declare @Ponto_Liga_Apoio_ID	Int
	Declare @Tab_Tipo_Ponto_Operacao_ID Int
	Declare	@Flag_Exibe_Link_Pto_Apoio	Char(1)

	Select	@Flag_Exibe_Link_Pto_Apoio = TPS.Parametro
	From	Tab_Parametro_Sistema As TPS
	Where	TPS.Tab_Parametro_Sistema_ID = 672

	Select	@Tab_Tipo_Ponto_Operacao_ID = PO.Tab_Tipo_Ponto_Operacao_ID,
		@CNPJPO = PO.PJ_CGC
	From	vPonto_Operacao As PO
	Where	Ponto_Operacao_ID = @Ponto_Operacao_ID

	If IsNull(@Flag_Exibe_Link_Pto_Apoio, 'N') = 'S' And IsNull(@Tab_Tipo_Ponto_Operacao_ID, 0) = 6
	    Begin

		Select	@CNPJPA = PO.PJ_CGC
		From	Liga_Pontos_Apoio		As LPA
			Inner Join Ponto_Operacao	As PA On LPA.Ponto_Apoio_ID = PA.Ponto_Operacao_ID
			Inner Join vPonto_Operacao	As PO On PO.Ponto_Operacao_ID = LPA.Ponto_Operacao_ID
		Where	LPA.Ponto_Apoio_ID = 25
			And LPA.Tab_Status_ID = 1

		Select	@Aux = @CNPJPA
	    End
	Else
	    Begin
		Select	@Aux = @CNPJPO
	    End

	Return	@Aux
End
 
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_OBTER_CGC_PTO_APOIO]    Script Date: 21/07/2015 16:26:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_OBTER_CGC_PTO_APOIO] (@PONTO_OPERACAO_ID INT)
RETURNS VARCHAR (14)
AS

/*
19 22 23 26 28
SELECT DBO.FN_OBTER_CGC_PTO_APOIO(28)
*/

BEGIN

	DECLARE @CGC VARCHAR(14)

	SELECT @CGC = PONTO_APOIO.PJ_CGC 
	FROM VPONTO_OPERACAO PONTO_APOIO
		INNER JOIN LIGA_PONTOS_APOIO 
			ON LIGA_PONTOS_APOIO.PONTO_APOIO_ID = PONTO_APOIO.PONTO_OPERACAO_ID
	WHERE LIGA_PONTOS_APOIO.PONTO_OPERACAO_ID = @PONTO_OPERACAO_ID
	AND LIGA_PONTOS_APOIO.TAB_STATUS_ID = 1 

RETURN  @CGC

END
 

GO

/****** Object:  UserDefinedFunction [dbo].[FN_Diferenca_Data_Extenso]    Script Date: 21/07/2015 16:26:57 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


create FUNCTION [dbo].[FN_Diferenca_Data_Extenso]
					(
					 	@Data_Ini 		DateTime,
						@Data_Fim 		DateTime
					 )
RETURNS varchar(100)

AS
BEGIN

	Declare @Extenso 		VarChar(100)
	Declare @Texto_Dia 		VarChar(100)
	Declare @Texto_Hora 		VarChar(100)
	Declare @Texto_Minuto 		VarChar(100)
	Declare @Diferenca_Minutos 	Int
	Declare @Dias 			Int
	Declare @Horas 			Int
	Declare @Minutos		Int
	
	Set @Extenso = ''
	Set @Texto_Dia = ''
	Set @Texto_Hora = ''
	Set @Texto_Minuto = ''

	Set @Diferenca_Minutos = datediff(minute,  @Data_Ini , @Data_Fim)

	if @Diferenca_Minutos < 0
	   return null
	
	Set @Horas = @Diferenca_Minutos/60
	Set @Minutos = @Diferenca_Minutos - (@Horas*60)
	
	Set @Dias = (@Horas / 24)
	Set @Horas =(@Horas - (@Dias * 24))

       if (isnull(@Horas,0)<10)
       	   Set @Texto_Hora = '0'

       if (isnull(@Minutos,0)<10)
       	   Set @Texto_Minuto = '0'

       Set @Texto_Dia = convert(varchar,isnull(@Dias, 0)) + ' Dias '
       Set @Texto_Hora = @Texto_Hora + convert(varchar,isnull(@Horas,0))
       Set @Texto_Minuto = @Texto_Minuto + convert(varchar,isnull(@Minutos, 0))

	
	if isnull(@Dias, 0) > 0
   	   Set @Extenso = @Texto_Dia

	Set @Extenso = @Extenso + @Texto_Hora + ':' + @Texto_Minuto

	
	RETURN @Extenso

END
 




GO

/****** Object:  UserDefinedFunction [dbo].[FN_RECUPERA_IMAGEM_VEICULO]    Script Date: 21/07/2015 16:26:57 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FN_RECUPERA_IMAGEM_VEICULO]	
					(
					 	@FLAG_CARREGADO			CHAR(1),
					 	@INDIC_IGNICAO_VEICULO		CHAR(1),
						@TAB_TIPO_PROP_VEICULO_ID	INT    ,
						@TAB_SITUACAO_RISCO_ID		INT   
					 )
RETURNS varchar(100)

AS
BEGIN
	DECLARE @IMAGEM				VARCHAR(100)
	DECLARE @TAB_TIPO_IMAGEM_VEICULO_ID	INT

	Set @FLAG_CARREGADO = isnull(@FLAG_CARREGADO,'N')
	Set @INDIC_IGNICAO_VEICULO = isnull(@INDIC_IGNICAO_VEICULO,'N')

	IF  @FLAG_CARREGADO = 'S' AND @INDIC_IGNICAO_VEICULO = 'S'
	   SET @TAB_TIPO_IMAGEM_VEICULO_ID = 1
	
	ELSE IF @FLAG_CARREGADO = 'S' AND @INDIC_IGNICAO_VEICULO = 'N'
   	   SET @TAB_TIPO_IMAGEM_VEICULO_ID = 2
	
	ELSE IF @FLAG_CARREGADO = 'N' AND @INDIC_IGNICAO_VEICULO = 'S'
    	   SET @TAB_TIPO_IMAGEM_VEICULO_ID = 3
	
	ELSE IF @FLAG_CARREGADO = 'N' AND @INDIC_IGNICAO_VEICULO = 'N'
	   SET @TAB_TIPO_IMAGEM_VEICULO_ID = 4


	IF @TAB_SITUACAO_RISCO_ID in (4,5,6,7)
	   BEGIN
		   Select @IMAGEM = IMAGEM_ALERTA
			From IMAGEM_VEICULO
			Where TAB_TIPO_PROP_VEICULO_ID = @TAB_TIPO_PROP_VEICULO_ID
			And   TAB_TIPO_IMAGEM_VEICULO_ID = @TAB_TIPO_IMAGEM_VEICULO_ID
	   END
	ELSE
	   BEGIN
		   Select @IMAGEM = IMAGEM_NORMAL
			From IMAGEM_VEICULO
			Where TAB_TIPO_PROP_VEICULO_ID = @TAB_TIPO_PROP_VEICULO_ID
			And   TAB_TIPO_IMAGEM_VEICULO_ID = @TAB_TIPO_IMAGEM_VEICULO_ID
	   END


	RETURN @IMAGEM

END
 


GO

/****** Object:  UserDefinedFunction [dbo].[FN_CGS_Edita_Valor_Campo_Texto_n]    Script Date: 21/07/2015 16:26:57 ******/
SET ANSI_NULLS OFF
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE FUNCTION [dbo].[FN_CGS_Edita_Valor_Campo_Texto_n](@Param float, @Default varchar(20), @Qtde_Casas int) RETURNS VARCHAR(20)
as
BEGIN
	declare
		@Val_aux         	float,
		@Val_Decimal     	varchar(20),
		@Val_Resto       	varchar(20),
		@Tamanho         	int,
		@Pos_inicio      	int,
		@Val_aux_char    	varchar(20),
		@Val_aux_char2   	varchar(20),
		@Valor 	   		float,
		@intValor 		int,
		@Caracter_decimal 	varchar(20),
		@Posicao          	int,
		@Dif              	int,
		@i 			int,
		@aux 			varchar(20)

	If IsNull(@Param,0) = 0
	  begin
		return(@Default)
	  end

	/* VERIFICA QUAL O CARACTER SEPARADOR DE DECIMAIS*/
	select @Caracter_decimal = '.'

	If @Param < 1 And @Param > -1
	  begin
    		select @Valor = @Param * (power(10 , @Qtde_Casas))
    		select @intValor = @Valor
		select @Valor = @intValor
		select @Valor = @Valor / (power(10 , @Qtde_Casas))
		select @Param = @Valor
	  end


	select @Valor = 1 / power(10 , @Qtde_Casas)
	If @Param < @Valor And @Param > (-1 * @Valor)
	  begin
    		select @Valor = 1 / power(10 , (@Qtde_Casas + 1))
 		If @Param < @Valor
		  begin
        		RETURN (@Default)
		  END
		Else
		  BEGIN
		        SELECT @Valor = 1 / POWER(10 , @Qtde_Casas)
		        SELECT @Val_aux_char = @Valor
        		SELECT @Val_aux_char2 = @Valor
		  END
	  END
	ELSE
	  BEGIN
    		SELECT @Val_aux_char = @Param
    		SELECT @Val_aux_char2 = @Param
	  END

	SELECT @Posicao = CHARINDEX(@Caracter_decimal, @Val_aux_char, 1)
	If @Posicao > 0
	  BEGIN
    		SELECT @Dif = Len(@Val_aux_char) - @Posicao
    		If @Dif >= @Qtde_Casas
		  BEGIN
		        SELECT @Val_aux_char = SUBSTRING(@Val_aux_char, 1, @Posicao + @Qtde_Casas)
		  END
		Else
		  BEGIN
        		SELECT @aux = ''
			select @i = @Dif
			WHILE @i <= @Qtde_Casas - 1
			  begin
            			select @aux = @aux + '0'	
				select @i = @i + 1
        		  end
        		select @Val_aux_char = @Val_aux_char + @aux
    		  End
    		select @Val_Decimal = substring(@Val_aux_char, @Posicao + 1, @Qtde_Casas)
    		select @Val_Resto = substring(@Val_aux_char2, 1, @Posicao - 1)
	  end
	Else
	  begin
    		select @aux = ''
		select @i = 1
		while @i <= @Qtde_Casas
		  begin
        		select @aux = @aux + '0'	
			select @i = @i + 1
		  end
    
    		select @Val_aux_char = @Val_aux_char + @Caracter_decimal + @aux
    		select @Val_Decimal = @aux
    		select @Val_Resto = @Val_aux_char2
	  end
	
	If @Val_Resto = ''
	  BEGIN
    		SELECT @Val_Resto = '0'
	  End

	SELECT @Val_aux_char = LTRIM(RTrim(@Val_Resto)) + ',' + @Val_Decimal

	RETURN(@Val_aux_char)
END

GO

/****** Object:  UserDefinedFunction [dbo].[fn_OnlyDate]    Script Date: 21/07/2015 16:26:57 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[fn_OnlyDate](@AdDateTime DATETIME)
RETURNS DATETIME
AS
BEGIN
  RETURN CONVERT(DATETIME,CONVERT(CHAR(10),@AdDateTime,101))
END

GO

/****** Object:  UserDefinedFunction [dbo].[FN_ECR_BUSCA_ENDERECO_ID]    Script Date: 21/07/2015 16:26:57 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[FN_ECR_BUSCA_ENDERECO_ID] (@PESSOA_ID INT, @TAB_TIPO_ENDERECO_IDS VARCHAR(15))
RETURNS INT
WITH SCHEMABINDING, RETURNS NULL ON NULL INPUT
AS
    BEGIN
	RETURN(
	SELECT	TOP 1 ENDERECO_PESSOA_ID
	FROM	dbo.ENDERECO_PESSOA (NOLOCK)
		LEFT JOIN dbo.SplitString_XML(@TAB_TIPO_ENDERECO_IDS, ',') TE ON TE.Item = ENDERECO_PESSOA.TAB_TIPO_ENDERECO_ID
	WHERE	PESSOA_ID = @PESSOA_ID
	AND	TAB_STATUS_ID = 1
	ORDER BY ISNULL(TE.Id, 100), ENDERECO_PESSOA_ID DESC)
    END
 
 

GO

